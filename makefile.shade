var AUTHORS='Microsoft Open Technologies, Inc.'

use-standard-lifecycle
k-standard-goals

default DOTNET_ARGUMENT='-d '

#benchmark-quiet target='--quiet'
  -DOTNET_ARGUMENT='';

#benchmark-tests .compile
  @{
    var sql = string.IsNullOrEmpty(E("BENCHMARK_SQL")) ? string.Empty : "-q " + E("BENCHMARK_SQL");
    var scenarios = new string[]
    {
      "-n Plaintext",
      "-n Plaintext --webHost HttpSys",
      "-n Plaintext -f Benchmarks.PassthroughConnectionFilter",
      "-n Plaintext -m https",
      "-n Plaintext -m https --webHost HttpSys",
      "-n Json",
      "-n Json --webHost HttpSys",
      "-n Json -f Benchmarks.PassthroughConnectionFilter",
      "-n Json -m https",
      "-n Json -m https --webHost HttpSys",
      "-n MvcPlaintext",
      "-n MvcJson",
      "-n MemoryCachePlaintext",
      "-n MemoryCachePlaintextSetRemove",
      "-n ResponseCachingPlaintextCached",
      "-n ResponseCachingPlaintextCached --method DELETE",
      "-n ResponseCachingPlaintextResponseNoCache",
      "-n ResponseCachingPlaintextRequestNoCache",
      "-n ResponseCachingPlaintextVaryByCached",
    };

    foreach (var scenario in scenarios) {
      Dotnet(
        String.Format("{4}run -- {0} -s {1} -c {2} {3}", scenario, E("BENCHMARK_SERVER"), E("BENCHMARK_CLIENT"), sql,
          DOTNET_ARGUMENT),
        "src/BenchmarksDriver");
    }
  }
