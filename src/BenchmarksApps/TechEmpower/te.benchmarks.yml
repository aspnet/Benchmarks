imports:
  - https://raw.githubusercontent.com/dotnet/crank/main/src/Microsoft.Crank.Jobs.Wrk/wrk.yml
  - https://raw.githubusercontent.com/dotnet/crank/main/src/Microsoft.Crank.Jobs.Bombardier/bombardier.yml
  - https://github.com/aspnet/Benchmarks/blob/main/scenarios/aspnet.profiles.yml?raw=true

jobs:

  aspnetcore:
    source:
      repository: https://github.com/aspnet/Benchmarks
      branchOrCommit: main
      dockerFile: src/BenchmarksApps/TechEmpower/dockerfile
      dockerImageName: aspnetcore_reuse
      dockerContextDirectory: ./
    readyStateText: Application started
    arguments: --add-host="tfb-database:{{databaseServer}}"
    noClean: true

  postgresql:
    source:
      repository: https://github.com/TechEmpower/FrameworkBenchmarks.git
      branchOrCommit: master
      dockerFile: toolset/databases/postgres/postgres.dockerfile
      dockerImageName: postgres_te
      dockerContextDirectory: toolset/databases/postgres
    readyStateText: ready to accept connections
    noClean: true

scenarios:

# ASP.NET Core (Platform)
  plaintext_aspnetcore:
    application:
      job: aspnetcore
    load:
      job: wrk
      variables:
        presetHeaders: plaintext
        path: /plaintext
        pipeline: 16
        serverPort: 8080

  json_aspnetcore:
    application:
      job: aspnetcore
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /json
        serverPort: 8080

  fortunes_aspnetcore:
    db:
      job: postgresql
    application:
      job: aspnetcore
      source:
        dockerFile: src/BenchmarksApps/TechEmpower/dockerfile-db
        dockerImageName: aspnetcore_reuse_db
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /fortunes
        serverPort: 8080
