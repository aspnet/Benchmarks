FROM mcr.microsoft.com/dotnet/aspnet:9.0-azurelinux3.0 AS base
USER root
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# This stage is used to build the service project
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["Kestrel.csproj", "."]
RUN dotnet restore "./Kestrel.csproj"
COPY . .

# Always copy the TLS/Certificates folder from the repository into /src/Certificates in the container.
COPY ["testCert-2048.pfx", "src/Certificates/testCert-2048.pfx"]
COPY ["testCert-4096.pfx", "src/Certificates/testCert-4096.pfx"]

WORKDIR "/src/."
RUN dotnet build "./Kestrel.csproj" -c $BUILD_CONFIGURATION -o /app/build

# This stage is used to publish the service project to be copied to the final stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./Kestrel.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# If TLS certificates are present in the build context (copied into /src/Certificates by the earlier COPY . .),
# copy them into the publish output so the runtime can find them under 'certificates/'.
RUN mkdir -p /app/publish/certificates || true; \
    if [ -f ./Certificates/2048/testCert-2048.pfx ]; then cp ./Certificates/2048/testCert-2048.pfx /app/publish/certificates/; fi; \
    if [ -f ./Certificates/4096/testCert-4096.pfx ]; then cp ./Certificates/4096/testCert-4096.pfx /app/publish/certificates/; fi

# This stage is used in production or when running from VS in regular mode
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Ensure the certificate files copied into the build stage are also present in the final image where the app expects them
COPY --from=build /Certificates /app/certificates

ENTRYPOINT [ "dotnet", "Kestrel.dll" ]
