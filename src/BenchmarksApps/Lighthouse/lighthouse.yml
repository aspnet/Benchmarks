imports:
  - https://github.com/aspnet/Benchmarks/blob/main/scenarios/aspnet.profiles.standard.yml?raw=true

variables:
  serverPort: 5000
  serverScheme: http

jobs:
  runTemplate:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: mbuck/lighthouse-metrics
      dockerImageName: run-template
      dockerContextDirectory: src/BenchmarksApps/Lighthouse/
      dockerFile: src/BenchmarksApps/Lighthouse/run-template.dockerfile
    buildArguments:
      - TEMPLATE_ARGS="{{templateArgs}}"
      - TEMPLATE_NAME="{{templateName}}"
      - MAIN_PROJECT_RELATIVE_PATH="{{templateMainProjectRelativePath}}"
    environmentVariables:
      RUN_ARGS: "\"{{templateRunArgs}}\""
    readyStateText: "{{templateReadyStateText}}"

  lighthouse:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: mbuck/lighthouse-metrics
      dockerImageName: lighthouse
      dockerContextDirectory: src/BenchmarksApps/Lighthouse/
      dockerFile: src/BenchmarksApps/Lighthouse/lighthouse.dockerfile
    environmentVariables:
      SERVER_SCHEME: '{{serverScheme}}'
      SERVER_ADDRESS: '{{serverAddress}}'
      SERVER_PORT: '{{serverPort}}'
    readyStateText: Generating Lighthouse report
    waitForExit: true

scenarios:
  blazorWebInteractiveServer:
    application:
      job: runTemplate
      variables:
        templateArgs: blazor -int Server
        templateName: BlazorWebApp
        templateRunArgs: "--urls {{serverScheme}}://{{serverAddress}}:{{serverPort}}"
        templateReadyStateText: Application started
    load:
      job: lighthouse

  blazorWebInteractiveWebAssembly:
    application:
      job: runTemplate
      variables:
        templateArgs: blazor -int WebAssembly
        templateName: BlazorWebApp
        templateMainProjectRelativePath: ./BlazorWebApp
        templateRunArgs: "--urls {{serverScheme}}://{{serverAddress}}:{{serverPort}}"
        templateReadyStateText: Application started
    load:
      job: lighthouse
