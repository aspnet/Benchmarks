imports:
  - https://github.com/aspnet/Benchmarks/blob/main/scenarios/aspnet.profiles.standard.yml?raw=true

variables:
  serverPort: 5000
  serverScheme: http

jobs:
  runTemplate:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: mbuck/lighthouse-metrics
      project: src/BenchmarksApps/RunTemplate/RunTemplate.csproj
    arguments: "{{runTemplateArgs}}"
    readyStateText: "{{templateReadyStateText}}"

  lighthouse:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: mbuck/lighthouse-metrics
      dockerImageName: lighthouse
      dockerContextDirectory: src/BenchmarksApps/Lighthouse/
      dockerFile: src/BenchmarksApps/Lighthouse/Dockerfile
    environmentVariables:
      SERVER_SCHEME: '{{serverScheme}}'
      SERVER_ADDRESS: '{{serverAddress}}'
      SERVER_PORT: '{{serverPort}}'
    readyStateText: Generating Lighthouse report
    waitForExit: true

scenarios:
  blazorWebInteractiveServer:
    application:
      job: runTemplate
      variables:
        runTemplateArgs: >
          --template-args "blazor -int Server"
          --run-args "--urls {{serverScheme}}://{{serverAddress}}:{{serverPort}}"
        templateReadyStateText: "Application started"
    load:
      job: lighthouse

  blazorWebInteractiveWebAssembly:
    application:
      job: runTemplate
      variables:
        runTemplateArgs: >
          --template-args "blazor -int WebAssembly"
          --project-name "BlazorApp"
          --main-project-relative-path "./BlazorApp"
          --run-args "--urls {{serverScheme}}://{{serverAddress}}:{{serverPort}}"
        templateReadyStateText: "Application started"
    load:
      job: lighthouse
