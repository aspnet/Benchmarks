imports:
  - https://raw.githubusercontent.com/dotnet/crank/main/src/Microsoft.Crank.Jobs.Bombardier/bombardier.yml
  - https://github.com/aspnet/Benchmarks/blob/main/scenarios/aspnet.profiles.yml?raw=true
jobs:
  aspnetbenchmarks-docker:
    variables:
      connection-header: "--header Connection:keep-alive"
      protocol: http
      server: Kestrel
      transport: Sockets
      scenario: plaintext
    source:
      localFolder: d:\source\aspnetbenchmarks
      dockerFile: docker/container-matrix/Middleware.dockerfile
      dockerImageName: app
      dockerContextDirectory: .
      dockerCommand: "--nonInteractive true --scenarios {{scenario}} --urls {{protocol}}://[*]:{{serverPort}} --server {{server}} --kestrelTransport {{transport}} --protocol {{protocol}} {{databaseCmd}}"
    readyStateText: Application started.
    environmentVariables:
      database: "PostgreSQL"
      connectionString: >
       "Server={{databaseServer}};Database=hello_world;User Id=benchmarkdbuser;Password=benchmarkdbpass;Maximum Pool Size=256;NoResetOnClose=true;Enlist=false;Max Auto Prepare=4"
  postgresql:
    source:
      repository: https://github.com/TechEmpower/FrameworkBenchmarks.git
      branchOrCommit: master
      dockerFile: toolset/databases/postgres/postgres.dockerfile
      dockerImageName: postgres_te
      dockerContextDirectory: toolset/databases/postgres
    readyStateText: ready to accept connections
    noClean: true

scenarios:
  plaintext-docker:
    application:
      job: aspnetbenchmarks-docker
      variables:
        scenario: plaintext
        serverPort: 5000
      arguments: --cpus {{cpu}} --memory {{mem}}
      options:
        displayOutput: true
        displayBuild: true
    load:
      job: bombardier
      variables:
          warmup: 5
          presetHeaders: plaintext
          path: /plaintext
          duration: "{{ duration }}"
          rate: "{{ rate }}"
          serverPort: 5000
  json-docker:
    application:
      job: aspnetbenchmarks-docker
      variables:
        scenario: json
        serverPort: 5000
      arguments: --cpus {{cpu}} --memory {{mem}}
    load:
      job: bombardier
      variables:
          warmup: 5
          presetHeaders: plaintext
          path: /json
          duration: "{{duration}}"
          rate: "{{rate}}"
          serverPort: 5000

  db-fortunes-raw-docker:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks-docker
      variables:
        scenario: dbfortunesraw
        serverPort: 5000
    load:
      job: bombardier
      variables:
          warmup: 5
          presetHeaders: plaintext
          path: /fortunes/raw
          rate: "{{rate}}"
          duration: 15
          serverPort: 5000