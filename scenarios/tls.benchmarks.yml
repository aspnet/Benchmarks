imports:
  - https://raw.githubusercontent.com/dotnet/crank/main/src/Microsoft.Crank.Jobs.Bombardier/bombardier.yml
  - https://raw.githubusercontent.com/dotnet/crank/main/src/Microsoft.Crank.Jobs.HttpClient/httpclient.yml
  - https://github.com/aspnet/Benchmarks/blob/main/scenarios/aspnet.profiles.yml?raw=true

variables:
  serverPort: 5000

jobs:
  httpSysServer:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: main
      project: src/BenchmarksApps/TLS/HttpSys/HttpSys.csproj
    readyStateText: Application started.
    variables:
      # behavioral settings
      mTLS: false # enables settings on http.sys to negotiate client cert on connections
      tlsRenegotiation: false # enables client cert validation
      # debug settings
      certValidationConsoleEnabled: false
      httpSysLogs: false
      statsEnabled: false
      logRequestDetails: false
    arguments: "--urls https://{{serverAddress}}:{{serverPort}} --mTLS {{mTLS}} --certValidationConsoleEnabled {{certValidationConsoleEnabled}} --statsEnabled {{statsEnabled}} --tlsRenegotiation {{tlsRenegotiation}} --httpSysLogs {{httpSysLogs}} --logRequestDetails {{logRequestDetails}}"

  kestrelServer:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: main
      project: src/BenchmarksApps/TLS/Kestrel/Kestrel.csproj
    readyStateText: Application started.
    variables:
      # behavioral settings
      mTLS: false
      tlsRenegotiation: false
      tlsProtocols: "tls12,tls13"
      # debug settings
      certValidationConsoleEnabled: false
      statsEnabled: false
      logRequestDetails: false
    arguments: "--urls https://{{serverAddress}}:{{serverPort}} --mTLS {{mTLS}} --certValidationConsoleEnabled {{certValidationConsoleEnabled}} --tlsProtocols {{tlsProtocols}} --statsEnabled {{statsEnabled}} --tlsRenegotiation {{tlsRenegotiation}} --logRequestDetails {{logRequestDetails}}"

  dockerLinuxKestrelServer:
    sources:
      dockerKestrel:
        repository: https://github.com/aspnet/benchmarks.git
        branchOrCommit: main
    dockerFile: dockerKestrel/src/BenchmarksApps/TLS/Kestrel/Dockerfile
    dockerImageName: dockerKestrel
    dockerContextDirectory: dockerKestrel/src/BenchmarksApps/TLS/Kestrel
    port: 8080
    readyStateText: Application started.
    environmentVariables:
      urls: "https://*:8080" # any ip, port 8080
      mTLS: false
      tlsRenegotiation: false
      certValidationConsoleEnabled: false
      statsEnabled: false  

scenarios:

# HTTP.SYS

  tls-handshakes-httpsys:
    application:
      job: httpSysServer
    load:
      job: httpclient
      variables:
        path: /hello-world
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        sslProtocol: tls12

  mTls-handshakes-httpsys:
    application:
      job: httpSysServer
      variables:
        mTLS: true # enables settings on http.sys to negotiate client cert on connections
        tlsRenegotiation: true # enables client cert validation
        httpSysLogs: false # only for debug purposes
        certValidationConsoleEnabled: false # only for debug purposes
        serverPort: 8080 # IMPORTANT: not to intersect with other tests in case http.sys configuration impacts other benchmarks
    load:
      job: httpclient
      variables:
        serverPort: 8080 # in sync with server
        path: /hello-world
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        certPath: https://raw.githubusercontent.com/aspnet/Benchmarks/refs/heads/main/src/BenchmarksApps/TLS/HttpSys/testCert.pfx
        certPwd: testPassword
        sslProtocol: tls12

  tls-renegotiation-httpsys:
    application:
      job: httpSysServer
      variables:
        mTLS: false
        tlsRenegotiation: true
        httpSysLogs: false # only for debug purposes
        certValidationConsoleEnabled: false # only for debug purposes
    load:
      job: httpclient
      variables:
        path: /hello-world
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        certPath: https://raw.githubusercontent.com/aspnet/Benchmarks/refs/heads/main/src/BenchmarksApps/TLS/HttpSys/testCert.pfx
        certPwd: testPassword
        sslProtocol: tls12

# Kestrel
  
  tls-handshakes-kestrel:
    application:
      job: kestrelServer
    load:
      job: httpclient
      variables:
        path: /hello-world
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        sslProtocol: tls12

  mTls-handshakes-kestrel:
    application:
      job: kestrelServer
      variables:
        mTLS: true
        certValidationConsoleEnabled: false # only for debug purposes
    load:
      job: httpclient
      variables:
        path: /hello-world
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        certPath: https://raw.githubusercontent.com/aspnet/Benchmarks/refs/heads/main/src/BenchmarksApps/TLS/Kestrel/testCert.pfx
        certPwd: testPassword
        sslProtocol: tls12

  tls-renegotiation-kestrel:
    application:
      job: kestrelServer
      variables:
        mTLS: false
        tlsRenegotiation: true
        certValidationConsoleEnabled: false # only for debug purposes
    load:
      job: httpclient
      variables:
        path: /hello-world
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        certPath: https://raw.githubusercontent.com/aspnet/Benchmarks/refs/heads/main/src/BenchmarksApps/TLS/Kestrel/testCert.pfx
        certPwd: testPassword
        sslProtocol: tls12

# Kestrel in Docker
  tls-handshakes-docker-openssl-332:
    application:
      job: dockerLinuxKestrelServer
      buildArguments: 
        # openssl version to install
        - OPENSSL_VERSION="3.3.3-r0"
        # lookup for openssl+branch version here https://pkgs.alpinelinux.org/packages?name=openssl&branch=v3.20&repo=&arch=x86_64
        - ALPINE_BRANCH="v3.21"
    load:
      job: httpclient
      variables:
        path: /hello-world
        serverPort: 8080
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        sslProtocol: tls12

  tls-handshakes-docker-openssl-111:
    application:
      job: dockerLinuxKestrelServer
      buildArguments: 
        # openssl version to install
        - OPENSSL_VERSION="1.1.1w-r1"
        # lookup for openssl+branch version here https://pkgs.alpinelinux.org/packages?name=openssl&branch=v3.20&repo=&arch=x86_64
        - ALPINE_BRANCH="v3.16"
    load:
      job: httpclient
      variables:
        path: /hello-world
        serverPort: 8080
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        sslProtocol: tls12

  tls-handshakes-docker-openssl-3015:
    application:
      job: dockerLinuxKestrelServer
      buildArguments: 
        # openssl version to install
        - OPENSSL_VERSION="3.0.15-r1"
        # lookup for openssl+branch version here https://pkgs.alpinelinux.org/packages?name=openssl&branch=v3.20&repo=&arch=x86_64
        - ALPINE_BRANCH="v3.17"
    load:
      job: httpclient
      variables:
        path: /hello-world
        serverPort: 8080
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        sslProtocol: tls12

  tls-handshakes-docker-azurelinux:
    application:
      job: dockerLinuxKestrelServer
      # openssl version is already pre-installed with base image (latest)
      dockerFile: dockerKestrel/src/BenchmarksApps/TLS/Kestrel/Dockerfile.azurelinux
    load:
      job: httpclient
      variables:
        path: /hello-world
        serverPort: 8080
        presetHeaders: connectionclose
        connections: 32
        serverScheme: https
        sslProtocol: tls12