# Examples:
# --config plaintext.benchmarks.yml --scenario plaintext --profile aspnet-physical
# --config benchmarks.compose.yml --scenario fortunes --profile aspnet-physical

imports:
  - https://raw.githubusercontent.com/dotnet/crank/main/src/Microsoft.Crank.Jobs.Wrk/wrk.yml
  - https://github.com/aspnet/Benchmarks/blob/main/scenarios/aspnet.profiles.yml?raw=true

variables:
    serverPort: 5000
    
jobs:
  aspnetbenchmarks:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: main
      project: src/Benchmarks/Benchmarks.csproj
    readyStateText: Application started.
    variables:
      serverPort: 5000
      server: Kestrel
      transport: Sockets
      serverScheme: http
    arguments: "--nonInteractive true --scenarios {{scenario}} --urls {{serverScheme}}://{{serverAddress}}:{{serverPort}} --server {{server}} --kestrelTransport {{transport}} --protocol {{protocol}}"
    environmentVariables:
      database: PostgresQL
      # [SuppressMessage("Microsoft.Security", "CS002:SecretInNextLine", Justification="Development password, not confidential")]
      connectionString: Server={{databaseServer}};Database=hello_world;User Id=benchmarkdbuser;Password=benchmarkdbpass;Maximum Pool Size=18;Enlist=false;Max Auto Prepare=4;Multiplexing=true;Write Coalescing Buffer Threshold Bytes=1000

  postgresql:
    source:
      repository: https://github.com/TechEmpower/FrameworkBenchmarks.git
      branchOrCommit: master
      dockerFile: toolset/databases/postgres/postgres.dockerfile
      dockerImageName: postgres_te
      dockerContextDirectory: toolset/databases/postgres
    readyStateText: ready to accept connections
    noClean: true

  mssql:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: main
      dockerFile: docker/mssql-techempower/Dockerfile
      dockerImageName: mssql_te
      dockerContextDirectory: docker/mssql-techempower
    readyStateText: Data imported
    noClean: true

scenarios:
  fortunes:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbFortunesRaw
    load:
      job: wrk
      variables:
        serverPort: 5000
        presetHeaders: html
        path: /fortunes/raw

  fortunes_mssql:
    db:
      job: mssql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbFortunesRaw
      environmentVariables:
        database: SqlServer
        # [SuppressMessage("Microsoft.Security", "CS002:SecretInNextLine", Justification="Development password, not confidential")]
        connectionString: Server={{databaseServer}};Database=hello_world;User Id=sa;Password=Benchmarkdbp@55;Encrypt=false
    load:
      job: wrk
      variables:
        serverPort: 5000
        presetHeaders: html
        path: /fortunes/raw

  fortunes_ef:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbFortunesEf
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /fortunes/ef

  fortunes_ef_mvc_https:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: MvcDbFortunesEf
        protocol: https
        serverScheme: https        
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /mvc/fortunes/ef
        serverScheme: https

  fortunes_dapper:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbFortunesDapper
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /fortunes/dapper

  single_query:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbSingleQueryRaw
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /db/raw
        connections: 512

  single_query_ef:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbSingleQueryRaw
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /db/ef
        connections: 512

  single_query_dapper:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbSingleQueryDapper
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /db/dapper
        connections: 512

  multiple_queries:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbMultiQueryRaw
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /queries/raw?queries=20
        connections: 512

  multiple_queries_ef:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbMultiQueryEf
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /queries/ef?queries=20
        connections: 512

  multiple_queries_dapper:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbMultiQueryDapper
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /queries/dapper?queries=20
        connections: 512

  updates:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbMultiUpdateRaw
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /updates/raw?queries=20
        connections: 512

  updates_ef:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbMultiUpdateEf
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /updates/ef?queries=20
        connections: 512

  updates_dapper:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: DbMultiUpdateDapper
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /updates/dapper?queries=20
        connections: 512

profiles:
  sqlite:
    jobs: 
      application:
        environmentVariables:
          database: Sqlite
          connectionString: Data Source=benchmarks.db
