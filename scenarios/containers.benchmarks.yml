imports:
  - https://github.com/aspnet/Benchmarks/blob/main/scenarios/te.benchmarks.yml?raw=true

jobs:
  aspnet:
    variables:
      protocol: http
      server: Kestrel
      transport: Sockets
      scenario: plaintext
      serverPort: 8080
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: main
      dockerFile: docker/container-matrix/Middleware.dockerfile
      dockerImageName: app
      dockerContextDirectory: .
      dockerCommand: "--nonInteractive true --scenarios {{scenario}} --urls {{protocol}}://[*]:{{serverPort}} --server {{server}} --kestrelTransport {{transport}} --protocol {{protocol}} {{databaseCmd}}"
    readyStateText: Application started.
    environmentVariables:
      database: "PostgreSQL"
      # [SuppressMessage("Microsoft.Security", "CS002:SecretInNextLine", Justification="Development password, not confidential")]
      connectionString: '"Server={{databaseServer}};Database=hello_world;User Id=benchmarkdbuser;Password=benchmarkdbpass;Maximum Pool Size=256;NoResetOnClose=true;Enlist=false;Max Auto Prepare=4"'
    noClean: true

scenarios:
  json_aspnet:
    application:
      job: aspnet
      variables:
        scenario: json
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /json
        serverPort: 8080

  json_aspnet_alpine:
    application:
      job: aspnet
      source:
        dockerFile: docker/container-matrix/Middleware-alpine.dockerfile
      variables:
        scenario: json
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /json
        serverPort: 8080

  json_aspnet_composite:
    application:
      job: aspnet
      source:
        dockerFile: docker/container-matrix/Middleware-composite.dockerfile
      variables:
        scenario: json
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /json
        serverPort: 8080

  fortunes_aspnet:
    db:
      job: postgresql
    application:
      job: aspnet
      variables:
        scenario: dbfortunesraw
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /fortunes/raw
        serverPort: 8080

  fortunes_aspnet_alpine:
    db:
      job: postgresql
    application:
      job: aspnet
      source:
        dockerFile: docker/container-matrix/Middleware-alpine.dockerfile
      variables:
        scenario: dbfortunesraw
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /fortunes/raw
        serverPort: 8080

  fortunes_aspnet_composite:
    db:
      job: postgresql
    application:
      job: aspnet
      source:
        dockerFile: docker/container-matrix/Middleware-composite.dockerfile
      variables:
        scenario: dbfortunesraw
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /fortunes/raw
        serverPort: 8080

  json_aspnet_net6:
    application:
      job: aspnet
      source:
        dockerFile: docker/container-matrix/Middleware-net6.dockerfile
      variables:
        scenario: json
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /json
        serverPort: 8080

  fortunes_aspnet_net6:
    db:
      job: postgresql
    application:
      job: aspnet
      source:
        dockerFile: docker/container-matrix/Middleware-net6.dockerfile
      variables:
        scenario: dbfortunesraw
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /fortunes/raw
        serverPort: 8080

  json_aspnet_net7:
    application:
      job: aspnet
      source:
        dockerFile: docker/container-matrix/Middleware-net7.dockerfile
      variables:
        scenario: json
    load:
      job: wrk
      variables:
        presetHeaders: json
        path: /json
        serverPort: 8080

  fortunes_aspnet_net7:
    db:
      job: postgresql
    application:
      job: aspnet
      source:
        dockerFile: docker/container-matrix/Middleware-net7.dockerfile
      variables:
        scenario: dbfortunesraw
    load:
      job: wrk
      variables:
        presetHeaders: html
        path: /fortunes/raw
        serverPort: 8080        
