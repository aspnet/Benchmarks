parameters:
- name: server
  type: string
  default: ''
- name: client
  type: string
  default: ''
- name: cpuCount
  type: number
  default: 32

# Scenarios
- name: scenarios 
  type: object
  default: 

# Plaintext

#  - displayName: Plaintext Platform
#    arguments: -n PlaintextPlatform $(plaintextPlatformJobs)
#  - displayName: Plaintext
#    arguments: -n Plaintext $(plaintextJobs)
#  - displayName: Plaintext Non Pipelined
#    arguments: -n PlaintextNonPipelined $(plaintextJobs)
#  - displayName: Plaintext Mvc
#    arguments: -n MvcPlaintext $(plaintextJobs)
#  - displayName: Plaintext Endpoint
#    arguments: -n EndpointPlaintext $(plaintextJobs)
#  - displayName: Plaintext HttpSys
#    arguments: -n Plaintext --webHost HttpSys --windows-only $(plaintextJobs)
#  - displayName: Static Files
#    arguments: -n StaticFiles $(plaintextJobs)
  
# Json

#  - displayName: Json Platform
#    arguments: -n JsonPlatform $(jsonPlatformJobs)
#  - displayName: Json Middleware
#    arguments: -n Json $(jsonJobs)
  - displayName: Json Mvc
    arguments: -n MvcJson $(jsonJobs)
#  - displayName: Json Mvc (NewtonSoft)
#    arguments: -n MvcJsonNet $(jsonJobs)
#  - displayName: Json Mvc (2KB)
#    arguments: -n MvcJson2k $(jsonJobs)
#  - displayName: Json Mvc (NewtonSoft, 2KB)
#    arguments: -n MvcJsonNet2k $(jsonJobs)
#  - displayName: Json Mvc Input (2KB)
#    arguments: -n MvcJsonInput2k $(jsonJobs)
#  - displayName: Json Mvc Input (NewtonSoft, 2KB)
#    arguments: -n MvcJsonNetInput2k $(jsonJobs)

# Https

#  - displayName: Plaintext Https
#    arguments: -n Plaintext -m https $(plaintextJobs)
#  - displayName: Plaintext HttpSys Https
#    arguments: -n Plaintext -m https --webHost HttpSys --windows-only $(plaintextJobs)
#  - displayName: Plaintext Non Pipelined Https
#    arguments: -n PlaintextNonPipelined -m https $(plaintextJobs)
#  - displayName: Json Https
#    arguments: -n Json -m https $(jsonJobs)
#  - displayName: Json HttpSys Https
#    arguments: -n Json -m https --webHost HttpSys --windows-only $(jsonJobs)

# Http2

  - displayName: Plaintext h2
    arguments: -n PlaintextNonPipelined -m h2 $(plaintextJobs) $(http2Jobs)
  - displayName: Plaintext h2
    arguments: -n PlaintextNonPipelined -m h2 --webHost HttpSys --windows-only $(plaintextJobs) $(http2Jobs)
  - displayName: Plaintext h2c
    arguments: -n PlaintextNonPipelined -m h2c --no-startup-latency $(plaintextJobs) $(http2Jobs)
  - displayName: Json h2
    arguments: -n Json -m h2 $(plaintextJobs) $(jsonJobs)
  - displayName: Json h2
    arguments: -n Json -m h2 --webHost HttpSys --windows-only $(plaintextJobs) $(jsonJobs)
  - displayName: Json h2c
    arguments: -n Json -m h2c --no-startup-latency $(plaintextJobs) $(jsonJobs)

variables:
  defaultArgs: "--server $(server) --client $(client) --runtimeversion 5.0.* --self-contained --warmup 0 --duration 5 --collect-counters --description Trend/Latest --session $[format('{0:yyyyMMddHHmm}', pipeline.startTime)]"
  sqlArgs: --table \"BENCHMARKS_CONNECTION_STRING\"

  plaintextJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Benchmarks/benchmarks.plaintext.json
  htmlJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Benchmarks/benchmarks.html.json
  jsonJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Benchmarks/benchmarks.json.json
  multiQueryJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Benchmarks/benchmarks.multiquery.json
  httpClientJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/BenchmarksApps/HttpClient/Proxy/benchmarks.json
  plaintextPlatformJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/BenchmarksApps/Kestrel/PlatformBenchmarks/benchmarks.plaintext.json --sdk 5.0.100-preview.4.20202.8
  jsonPlatformJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/BenchmarksApps/Kestrel/PlatformBenchmarks/benchmarks.json.json --sdk 5.0.100-preview.4.20202.8
  basicApiJobs: --database MySql --jobs https://raw.githubusercontent.com/aspnet/AspNetCore/master/src/Mvc/benchmarkapps/BasicApi/benchmarks.json --duration 60
  basicViewsJobs: --database MySql --jobs https://raw.githubusercontent.com/aspnet/AspNetCore/master/src/Mvc/benchmarkapps/BasicViews/benchmarks.json --duration 60
  http2Jobs: --clientName H2Load -p Streams=70 --headers None # --connections ${{ cpuCount }} --clientThreads ${{ cpuCount }}
  blazorJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Benchmarks/benchmarks.blazor.json

# Agent-less jobs need this pool
pool: server

jobs:
- job: Trend
  steps:
  - ${{ each s in parameters.scenarios }}:
    - template: trend-citrine-template.yml # todo: make it a parameter to target a different template for cloud
      parameters:
        displayName: "${{ s.displayName }}"
        arguments: "${{ s.arguments }} $(defaultArgs) $(sqlArgs)"
