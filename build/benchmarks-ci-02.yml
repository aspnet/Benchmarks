# Do not change this file, it is generated using these steps:
# - The file benchmarks.matrix.yml defines how each job is run in parallel
# - Convert its content to json using https://jsonformatter.org/yaml-to-json
# - Use the template in benchmarks.template.liquid and the converted json using https://liquidjs.com/playground.html
# - Update this file with the result of the template generation

trigger: none
pr: none

schedules:
- cron: "0 3/12 * * *"
  always: true # always run the pipeline even if there have not been source code changes since the last successful scheduled run.
  branches:
    include:
    - main

variables:
  - template: job-variables.yml
  - name: session
    value: $(Build.BuildNumber)
  - name: buildId
    value: $(Build.BuildId)
  - name: buildNumber
    value: $(Build.BuildNumber)
  - name: am
    value: $[lt(format('{0:HH}', pipeline.startTime), 12)]
  - name: pm
    value: $[ge(format('{0:HH}', pipeline.startTime), 12)]

jobs:

# GROUP 1

- job: Frameworks_Arm_28_Linux
  displayName: 1- Frameworks Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: frameworks-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile arm-lin-28-app --profile intel-load2-load --profile amd-lin2-db "
      
- job: GC_Intel_Linux
  displayName: 1- GC Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: gc-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-lin-app "
      
- job: SslStream_Intel_Linux
  displayName: 1- SslStream Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: sslstream-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile intel-load-app --profile amd-lin-load "
      
# GROUP 2

- job: PGO_Intel_Windows
  displayName: 2- PGO Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Frameworks_Arm_28_Linux, GC_Intel_Linux, SslStream_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: pgo-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-win-app --profile amd-lin2-load --profile intel-db-db "
      
- job: PGO_Intel_Linux
  displayName: 2- PGO Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Frameworks_Arm_28_Linux, GC_Intel_Linux, SslStream_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: pgo-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-lin-app --profile amd-lin-load --profile intel-load-db "
      
- job: Mvc_Siryn_Linux
  displayName: 2- Mvc Siryn Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Frameworks_Arm_28_Linux, GC_Intel_Linux, SslStream_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: mvc-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile siryn-lin-app --profile arm-lin-load --profile intel-load2-db "
      
# GROUP 3

- job: SignalR_Intel_Linux
  displayName: 3- SignalR Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [PGO_Intel_Windows, PGO_Intel_Linux, Mvc_Siryn_Linux]
  condition: succeededOrFailed()
  steps:
  - template: signalr-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load "
      
- job: SignalR_Intel_Windows
  displayName: 3- SignalR Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [PGO_Intel_Windows, PGO_Intel_Linux, Mvc_Siryn_Linux]
  condition: succeededOrFailed()
  steps:
  - template: signalr-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load2-load "
      
- job: Blazor_Intel_Linux
  displayName: 3- Blazor Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [PGO_Intel_Windows, PGO_Intel_Linux, Mvc_Siryn_Linux]
  condition: succeededOrFailed()
  steps:
  - template: blazor-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile intel-perflin-app --profile intel-perfload-load "
      
# GROUP 4

- job: WebSockets_Intel_Linux
  displayName: 4- WebSockets Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [SignalR_Intel_Linux, SignalR_Intel_Windows, Blazor_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: websocket-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load "
      
- job: Build_Intel_Linux
  displayName: 4- Build Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [SignalR_Intel_Linux, SignalR_Intel_Windows, Blazor_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: build-perf-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-load2-app --profile intel-db-load "
      
- job: Trends_Database_Arm_80_Linux
  displayName: 4- Trends Database Arm 80 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [SignalR_Intel_Linux, SignalR_Intel_Windows, Blazor_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-app --profile amd-lin-load --profile amd-lin2-db "
      
# GROUP 5

- job: Single_File_Intel_Linux
  displayName: 5- Single File Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [WebSockets_Intel_Linux, Build_Intel_Linux, Trends_Database_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: singlefile-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load "
      
- job: Mvc_Intel_Windows
  displayName: 5- Mvc Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [WebSockets_Intel_Linux, Build_Intel_Linux, Trends_Database_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: mvc-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load2-load --profile intel-db-db "
      
- job: Frameworks_Database_Arm_80_Linux
  displayName: 5- Frameworks Database Arm 80 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [WebSockets_Intel_Linux, Build_Intel_Linux, Trends_Database_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: frameworks-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-app --profile amd-lin-load --profile amd-lin2-db "
      
# GROUP 6

- job: Mvc_Intel_Linux
  displayName: 6- Mvc Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Single_File_Intel_Linux, Mvc_Intel_Windows, Frameworks_Database_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: mvc-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: Single_File_Intel_Windows
  displayName: 6- Single File Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Single_File_Intel_Linux, Mvc_Intel_Windows, Frameworks_Database_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: singlefile-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load2-load "
      
- job: GC_Arm_28_Linux
  displayName: 6- GC Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Single_File_Intel_Linux, Mvc_Intel_Windows, Frameworks_Database_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: gc-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-28-app "
      
# GROUP 7

- job: Custom_Proxies_Intel_Linux
  displayName: 7- Custom Proxies Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Mvc_Intel_Linux, Single_File_Intel_Windows, GC_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: proxies-custom-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: Build_Intel_Windows
  displayName: 7- Build Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Mvc_Intel_Linux, Single_File_Intel_Windows, GC_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: build-perf-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load2-load "
      
- job: Trends_Arm_80_Linux
  displayName: 7- Trends Arm 80 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Mvc_Intel_Linux, Single_File_Intel_Windows, GC_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-app --profile amd-lin-load "
      
# GROUP 8

- job: Proxies_Intel_Linux
  displayName: 8- Proxies Intel Linux
  pool: server
  timeoutInMinutes: 180
  dependsOn: [Custom_Proxies_Intel_Linux, Build_Intel_Windows, Trends_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: proxies-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: Grpc_Intel_Linux
  displayName: 8- Grpc Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Custom_Proxies_Intel_Linux, Build_Intel_Windows, Trends_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: grpc-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-load2-app --profile amd-lin-load "
      
# GROUP 9

- job: Crossgen_Arm_28_Linux
  displayName: 9- Crossgen Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Proxies_Intel_Linux, Grpc_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: crossgen2-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile arm-lin-28-app --profile amd-lin-load "
      
- job: Crossgen_Intel_Linux
  displayName: 9- Crossgen Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Proxies_Intel_Linux, Grpc_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: crossgen2-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load "
      
- job: Trends_Database_Siryn_Linux
  displayName: 9- Trends Database Siryn Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Proxies_Intel_Linux, Grpc_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile siryn-lin-app --profile intel-load2-load --profile intel-db-db "
      
# GROUP 10

- job: Crossgen_Intel_Windows
  displayName: 10- Crossgen Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Crossgen_Arm_28_Linux, Crossgen_Intel_Linux, Trends_Database_Siryn_Linux]
  condition: succeededOrFailed()
  steps:
  - template: crossgen2-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load-load "
      
- job: Crossgen_Amd_Linux
  displayName: 10- Crossgen Amd Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Crossgen_Arm_28_Linux, Crossgen_Intel_Linux, Trends_Database_Siryn_Linux]
  condition: succeededOrFailed()
  steps:
  - template: crossgen2-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile amd-lin-app --profile intel-load2-load "
      
- job: HttpClient_Intel_Linux
  displayName: 10- HttpClient Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Crossgen_Arm_28_Linux, Crossgen_Intel_Linux, Trends_Database_Siryn_Linux]
  condition: succeededOrFailed()
  steps:
  - template: httpclient-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile intel-lin-app --profile amd-lin2-load "
      

