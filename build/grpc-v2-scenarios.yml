# gRPC scenarios

parameters:
- name: profile
  type: string
  default: ''
- name: warmup
  type: number
  default: 5
- name: duration
  type: number
  default: 15
- name: connection
  type: string
  default: ''

# Standard scenarios
- name: scenarios 
  type: object
  default:

  - displayName: "ASP.NET Core - Client: Grpc.Net.Client"
    arguments: --scenario grpcaspnetcoreserver-grpcnetclient  $(grpcJobs) --property server=grpcaspnetcoreserver --property client=grpcnetclient --application.collectCounters true
  - displayName: "ASP.NET Core - Client: Grpc.Core"
    arguments: --scenario grpcaspnetcoreserver-grpccoreclient $(grpcJobs) --property server=grpcaspnetcoreserver --property client=grpccoreclient --application.collectCounters true
  - displayName: "ASP.NET Core - Client: Go"
    arguments: --scenario grpcaspnetcoreserver-grpcgoclient   $(grpcJobs) --property server=grpcaspnetcoreserver --property client=grpcgoclient --application.collectCounters true

  - displayName: "Grpc.Core - Client: Grpc.Net.Client"
    arguments: --scenario grpccoreserver-grpcnetclient        $(grpcJobs) --property server=grpccoreserver --property client=grpcnetclient --application.collectCounters true
  - displayName: "Grpc.Core - Client: Grpc.Core"
    arguments: --scenario grpccoreserver-grpccoreclient       $(grpcJobs) --property server=grpccoreserver --property client=grpccoreclient --application.collectCounters true
  - displayName: "Grpc.Core - Client: Go"
    arguments: --scenario grpccoreserver-grpcgoclient         $(grpcJobs) --property server=grpccoreserver --property client=grpcgoclient --application.collectCounters true

  - displayName: "Go - Client: Grpc.Net.Client"
    arguments: --scenario grpcgoserver-grpcnetclient          $(grpcJobs) --property server=grpcgoserver --property client=grpcnetclient
  - displayName: "Go - Client: Grpc.Core"
    arguments: --scenario grpcgoserver-grpccoreclient         $(grpcJobs) --property server=grpcgoserver --property client=grpccoreclient
  - displayName: "Go - Client: Go"
    arguments: --scenario grpcgoserver-grpcgoclient           $(grpcJobs) --property server=grpcgoserver --property client=grpcgoclient

# H2Load scenarios
- name: h2loadscenarios 
  type: object
  default:

  - displayName: "ASP.NET Core - Client: h2load"
    arguments: --scenario grpcaspnetcoreserver-h2loadclient   $(grpcJobs) --property server=grpcaspnetcoreserver --property client=h2loadclient --application.collectCounters true
  - displayName: "Grpc.Core - Client: h2load"
    arguments: --scenario grpccoreserver-h2loadclient         $(grpcJobs) --property server=grpccoreserver --property client=h2loadclient --application.collectCounters true
  - displayName: "Go - Client: h2load"
    arguments: --scenario grpcgoserver-h2loadclient           $(grpcJobs) --property server=grpcgoserver --property client=h2loadclient

- name: callTypes
  type: object
  default:
    - displayName: "Call: Unary"
      arguments: --variable scenario=unary --property scenario=unary
    - displayName: "Call: Server Streaming"
      arguments: --variable scenario=serverstreaming --property scenario=serverstreaming
    - displayName: "Call: Ping Pong Streaming"
      arguments: --variable scenario=pingpongstreaming --property scenario=pingpongstreaming

- name: protocols
  type: object
  default:
    - displayName: "Protocol: h2c"
      arguments: --variable protocol=h2c --property protocol=h2c

- name: payloads
  type: object
  default:
    - displayName: "Payload: 0 B"
      arguments: --variable requestSize=0 --variable responseSize=0 --property payload=0

- name: connectionStreams
  type: object
  default:
    - displayName: "Streams: 1"
      arguments: --variable streams=1 --variable connections=$(h2loadConnectionsCount) --variable threads=$(h2loadConnectionsCount) --property streams=1
    - displayName: "Streams: 1x1"
      arguments: --variable streams=1 --variable connections=1 --variable threads=1 --property streams=1x1
    - displayName: "Streams: 70"
      arguments: --variable streams=70 --variable connections=$(h2loadConnectionsCount) --variable threads=$(h2loadConnectionsCount) --property streams=70
    - displayName: "Streams: 70x1"
      arguments: --variable streams=70 --variable connections=1 --variable threads=1 --property streams=70x1

steps:
- ${{ each s in parameters.h2loadscenarios }}:
  - ${{ each protocol in parameters.protocols }}:
    - ${{ each stream in parameters.connectionStreams }}:
      - task: PublishToAzureServiceBus@1
        condition: succeededOrFailed()
        displayName: ${{ s.displayName }} ${{ protocol.displayName }} ${{ stream.displayName }}
        inputs:
          connectedServiceName: ${{ parameters.connection }}
          waitForCompletion: true
          messageBody: |
            {
              "name": "benchmarksdriver2",
              "args": [ "--application.channel edge --application.framework netcoreapp5.0 --table GrpcBenchmarks --sql SQL_CONNECTION_STRING --session $(session) --profile ${{ parameters.profile }} --no-metadata --no-measurements --load.variables.duration ${{ parameters.duration }} --load.variables.warmup ${{ parameters.warmup }} ${{ s.arguments }} ${{ protocol.arguments }} ${{ stream.arguments }} --property scenario=unary --property payload=0 --variable body=AAAAAAcKBVdvcmxk --variable path=/grpc.testing.BenchmarkService/UnaryCall" ]	
            }
- ${{ each s in parameters.scenarios }}:
  - ${{ each callType in parameters.callTypes }}:
    - ${{ each payload in parameters.payloads }}:
      - ${{ each protocol in parameters.protocols }}:
        - ${{ each stream in parameters.connectionStreams }}:
          - task: PublishToAzureServiceBus@1
            condition: succeededOrFailed()
            displayName: ${{ s.displayName }} ${{ callType.displayName }} ${{ payload.displayName }} ${{ protocol.displayName }} ${{ stream.displayName }}
            inputs:
              connectedServiceName: ${{ parameters.connection }}
              waitForCompletion: true
              messageBody: |
                {
                  "name": "benchmarksdriver2",
                  "args": [ "--application.channel edge --load.channel edge --application.framework netcoreapp5.0 --load.framework netcoreapp5.0 --table GrpcBenchmarks --sql SQL_CONNECTION_STRING --session $(session) --profile ${{ parameters.profile }} --no-metadata --no-measurements --load.variables.duration ${{ parameters.duration }} --load.variables.warmup ${{ parameters.warmup }} ${{ s.arguments }} ${{ callType.arguments }} ${{ payload.arguments }} ${{ protocol.arguments }} ${{ stream.arguments }}" ]
                }
