imports:
  - https://raw.githubusercontent.com/dotnet/crank/main/src/Microsoft.Crank.Jobs.Bombardier/bombardier.yml
  
jobs:
  aspnetbenchmarks:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: main
      project: src/Benchmarks/Benchmarks.csproj
    readyStateText: Application started.
    variables:
      serverPort: 5000
      protocol: http
      serverScheme: http
      server: Kestrel
      transport: Sockets
      scenario: plaintext
    arguments: "--nonInteractive true --scenarios {{scenario}} --urls {{serverScheme}}://{{serverAddress}}:{{serverPort}} --server {{server}} --kestrelTransport {{transport}} --protocol {{protocol}} {% if database.size > 0 %} --database {{ database }} {% endif %}"
    environmentVariables:
      database: PostgresQL
      connectionString: Server={{databaseServer}};Database=hello_world;User Id=benchmarkdbuser;Password=benchmarkdbpass;Maximum Pool Size=256;NoResetOnClose=true;Enlist=false;Max Auto Prepare=4

  postgresql:
    source:
      repository: https://github.com/TechEmpower/FrameworkBenchmarks.git
      branchOrCommit: master
      dockerFile: toolset/databases/postgres/postgres.dockerfile
      dockerImageName: postgres_te
      dockerContextDirectory: toolset/databases/postgres
    readyStateText: ready to accept connections
    noClean: true

scenarios:

  fortunes:
    db:
      job: postgresql
    application:
      job: aspnetbenchmarks
      variables:
        scenario: MvcDbFortunesEf
        protocol: https
        serverScheme: https
        serverPort: 5000
    load:
      job: bombardier
      variables:
        presetHeaders: html
        connections: 64
        path: /mvc/fortunes/ef
        serverScheme: https
        serverPort: 5000
