# Proxy scenarios

parameters:
- name: profile
  type: string
  default: ''
- name: warmup
  type: number
  default: 5
- name: duration
  type: number
  default: 15
- name: connection
  type: string
  default: ''

# Scenarios
- name: scenarios
  type: object
  default:
  - displayName: Json Mvc
    arguments: --scenario MvcJson $(jsonJobs) --property displayname="Json Mvc (Hello world)"
  - displayName: Json Mvc (NewtonSoft)
    arguments: --scenario MvcJsonNet $(jsonJobs) --property displayname="Json Mvc NewtonSoft (Hello world)"
  - displayName: Json Mvc (2KB)
    arguments: --scenario MvcJson2k $(jsonJobs) --property displayname="Json Mvc Output (2KB)"
  - displayName: Json Mvc (NewtonSoft, 2KB)
    arguments: --scenario MvcJsonNet2k $(jsonJobs) --property displayname="Json Mvc Output NewtonSoft (2KB)"
  - displayName: Json Mvc Input (2KB)
    arguments: --scenario MvcJsonInput2k $(jsonJobs) --property displayname="Json Mvc Input (2KB)"
  - displayName: Json Mvc Input (NewtonSoft, 2KB)
    arguments: --scenario MvcJsonNetInput2k $(jsonJobs) --property displayname="Json Mvc Input NewtonSoft (2KB)"
  - displayName: Json Mvc (60KB)
    arguments: --scenario MvcJsonOutput60k $(jsonJobs) --property displayname="Json Mvc Output (60KB)"
  - displayName: Json Mvc (NewtonSoft, 60KB)
    arguments: --scenario MvcJsonNetOutput60k $(jsonJobs) --property displayname="Json Mvc Output NewtonSoft (60KB)"
  - displayName: Json Mvc Input (60KB)
    arguments: --scenario MvcJsonInput60k $(jsonJobs) --property displayname="Json Mvc Input (60KB)"
  - displayName: Json Mvc Input (NewtonSoft, 60KB)
    arguments: --scenario MvcJsonNetInput60k $(jsonJobs) --property displayname="Json Mvc Input NewtonSoft (60KB)"
  - displayName: Json Mvc Input (2MB)
    arguments: --scenario MvcJsonInput2M $(jsonJobs) --property displayname="Json Mvc Input (2MB)"
  - displayName: Json Mvc Input (NewtonSoft, 2MB)
    arguments: --scenario MvcJsonNetInput2M $(jsonJobs) --property displayname="Json Mvc Input NewtonSoft (2MB)"
  - displayName: Json Mvc (2MB)
    arguments: --scenario MvcJsonOutput2M $(jsonJobs) --property displayname="Json Mvc Output (2MB)"
  - displayName: Json Mvc (NewtonSoft, 2M)
    arguments: --scenario MvcJsonNetOutput2M $(jsonJobs) --property displayname="Json Mvc NewtonSoft (2MB)"

steps:
  - ${{ each s in parameters.scenarios }}:
    - task: PublishToAzureServiceBus@1
      condition: succeededOrFailed()
      displayName: ${{ s.displayName }}
      inputs:
        connectedServiceName: ${{ parameters.connection }}
        waitForCompletion: true
        messageBody: |
          {
            "name": "benchmarksdriver",
            "args": [ "${{ s.arguments }} --server ${{ parameters.server }} --client ${{ parameters.client }} --runtimeversion 5.0.* --self-contained --warmup ${{ parameters.warmup }} --duration ${{ parameters.duration }} --collect-counters --description Trend/Latest --session $(session) --table AspNetBenchmarks2 --sql SQL_CONNECTION_STRING" --property protocol=http --property server=kestrel ]
          }

