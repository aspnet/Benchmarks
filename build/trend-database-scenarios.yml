parameters:
- name: arguments
  type: string
  default: ''
- name: connection
  type: string
  default: ''
- name: condition
  type: string
  default: 'true'

# Scenarios
- name: scenarios
  type: object
  default:

# Platform

  - displayName: Fortunes Platform
    arguments: --scenario fortunes $(platformJobs) --property scenario=FortunesPlatform --property protocol=http
  - displayName: Fortunes Platform EF
    arguments: --scenario fortunes_ef $(platformJobs) --property scenario=FortunesPlatformEF --property protocol=http
  - displayName: Fortunes Platform Dapper
    arguments: --scenario fortunes_dapper $(platformJobs) --property scenario=FortunesPlatformDapper --property protocol=http
  - displayName: Single Query Platform
    arguments: --scenario single_query $(platformJobs) --property scenario=SingleQueryPlatform --property protocol=http
  - displayName: Multiple Queries Platform
    arguments: --scenario multiple_queries $(platformJobs) --property scenario=MultipleQueriesPlatform --property protocol=http
  - displayName: Updates Platform
    arguments: --scenario updates $(platformJobs) --property scenario=UpdatesPlatform --property protocol=http --variable duration=30
  - displayName: Caching Platform
    arguments: --scenario caching $(platformJobs) --property scenario=CachingPlatform --property protocol=http

# Middleware

  - displayName: Fortunes
    arguments: --scenario fortunes $(databaseJobs) --property scenario=Fortunes --property protocol=http
  - displayName: Fortunes EF
    arguments: --scenario fortunes_ef $(databaseJobs) --property scenario=FortunesEf --property protocol=http
  - displayName: Fortunes Dapper
    arguments: --scenario fortunes_dapper $(databaseJobs) --property scenario=FortunesDapper --property protocol=http

# Minimal APIS

  - displayName: Fortunes Minimal APIs
    arguments: --scenario fortunes $(minimalJobs) --property scenario=FortunesMinimalApis --property protocol=http
  - displayName: Single Query Minimal APIs
    arguments: --scenario single_query $(minimalJobs) --property scenario=SingleQueryMinimalApis --property protocol=http
  - displayName: Multiple Queries Minimal APIs
    arguments: --scenario multiple_queries $(minimalJobs) --property scenario=MultipleQueriesMinimalApis --property protocol=http
  - displayName: Updates Minimal APIs
    arguments: --scenario updates $(minimalJobs) --property scenario=UpdatesMinimalApis --property protocol=http --variable duration=30

# Blazor

  - displayName: Fortunes Blazor SSR
    arguments: --scenario fortunes $(blazorSsrJobs) --property scenario=FortunesBlazorSsr --property protocol=http

# Razor Pages

  - displayName: Fortunes Razor Pages
    arguments: --scenario fortunes $(razorPagesJobs) --property scenario=FortunesRazorPages --property protocol=http

steps:
- ${{ each s in parameters.scenarios }}:
  - task: PublishToAzureServiceBus@1
    displayName: "${{ s.displayName }}"
    condition: succeededOrFailed()
    timeoutInMinutes: 10
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      waitForCompletion: true
      useDataContractSerializer: "false"
      messageBody: |
        {
          "name": "crank",
          "condition": "(${{ parameters.condition }})",
          "retries": 1,
          "args": [ "${{ s.arguments }} $(azureProfile) --config https://raw.githubusercontent.com/aspnet/Benchmarks/main/scenarios/steadystate.profile.yml --application.framework net9.0 ${{ parameters.arguments }} --application.options.collectCounters true --application.collectDependencies true --no-metadata --no-measurements --load.options.reuseBuild true --session $(session) --description \"${{ s.displayName }} $(System.JobDisplayName)\" --property buildId=\"$(buildId)\" --property buildNumber=\"$(buildNumber)\" --command-line-property --table TrendBenchmarks --sql SQL_CONNECTION_STRING --chart" ]
        }
