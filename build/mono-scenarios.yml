parameters:
- name: arguments
  type: string
  default: ''
- name: connection
  type: string
  default: ''
- name: condition
  type: string
  default: 'true'

# Scenarios
- name: scenarios
  type: object
  default:

  - displayName: Plaintext Platform
    arguments: --scenario plaintext $(platformJobs) --property scenario=PlaintextPlatform
  - displayName: Json Platform
    arguments: --scenario json $(platformJobs) --property scenario=JsonPlatform
  - displayName: Plaintext
    arguments: --scenario plaintext $(plaintextJobs) --property scenario=Plaintext
  - displayName: Json
    arguments: --scenario json $(jsonJobs) --property scenario=Json

# Runtimes
- name: runtimes
  type: object
  default:
    - displayName: "Core CLR"
      arguments: --property runtime=coreclr
    - displayName: "Mono - JIT"
      arguments: --application.useMonoRuntime jit --property runtime=mono-jit
    - displayName: "Mono - JIT preemptive"
      arguments: --application.useMonoRuntime jit --property runtime=mono-jit-preemptive --application.environmentVariables MONO_THREADS_SUSPEND=preemptive
    # LLVM jobs quarantined until issue is fixed https://github.com/aspnet/Benchmarks/issues/1906
    # - displayName: "Mono - LLVM JIT"
    #   arguments: --application.useMonoRuntime llvm-jit --property runtime=mono-llvm --application.environmentVariables MONO_ENV_OPTIONS=--llvm
    # - displayName: "Mono - LLVM AOT"
    #   arguments: --application.useMonoRuntime llvm-aot --application.buildTimeout 01:00:00 --property runtime=mono-aot --application.environmentVariables MONO_ENV_OPTIONS=--llvm
    # - displayName: "Mono - LLVM AOT preemptive"
    #   arguments: --application.useMonoRuntime llvm-aot --application.buildTimeout 01:00:00 --property runtime=mono-aot-preemptive --application.environmentVariables MONO_THREADS_SUSPEND=preemptive --application.environmentVariables MONO_ENV_OPTIONS=--llvm

steps:
- ${{ each s in parameters.scenarios }}:
  - ${{ each runtime in parameters.runtimes }}:
    - task: PublishToAzureServiceBus@1
      displayName: "${{ s.displayName }} - ${{ runtime.displayName }}"
      condition: succeededOrFailed()
      timeoutInMinutes: 60
      inputs:
        connectedServiceName: ${{ parameters.connection }}
        waitForCompletion: true
        useDataContractSerializer: "false"
        messageBody: |
          {
            "condition": "(${{ parameters.condition }}) && ((new Date().getUTCHours() - 7 + 24) % 24 >= 13)",
            "name": "crank",
            "timeout": "01:00:00",
            "args": [ "${{ s.arguments }} ${{ runtime.arguments }} ${{ parameters.arguments }} --application.framework net9.0 --application.options.collectCounters true --no-metadata --no-measurements --load.options.reuseBuild true --session $(session) --description \"${{ s.displayName }} ${{ runtime.displayName }} $(System.JobDisplayName)\" --property buildId=\"$(buildId)\" --property buildNumber=\"$(buildNumber)\" --command-line-property --table MonoBenchmarks --sql SQL_CONNECTION_STRING --chart" ]
          }
