# Do not change this file, it is generated using these steps:
# - The file benchmarks.matrix.yml defines how each job is run in parallel
# - Convert its content to json using https://jsonformatter.org/yaml-to-json
# - Use the template in benchmarks.template.liquid and the converted json using https://liquidjs.com/playground.html
# - Update this file with the result of the template generation

trigger: none
pr: none

schedules:
- cron: "0 9/12 * * *"
  always: true # always run the pipeline even if there have not been source code changes since the last successful scheduled run.
  branches:
    include:
    - main

variables:
  - template: job-variables.yml
  - name: session
    value: $(Build.BuildNumber)
  - name: buildId
    value: $(Build.BuildId)
  - name: buildNumber
    value: $(Build.BuildNumber)
  - name: am
    value: $[lt(format('{0:HH}', pipeline.startTime), 12)]
  - name: pm
    value: $[ge(format('{0:HH}', pipeline.startTime), 12)]

jobs:

# GROUP 1

- job: Trends_Database_Intel_Linux
  displayName: 1- Trends Database Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: Trends_Intel_Windows
  displayName: 1- Trends Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load2-load "
      
- job: Trends_Database_Arm_28_Linux
  displayName: 1- Trends Database Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-28-app --profile amd-lin-load --profile amd-lin2-db "
      
# GROUP 2

- job: Trends_Database_Intel_Windows
  displayName: 2- Trends Database Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Intel_Linux, Trends_Intel_Windows, Trends_Database_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load-load --profile intel-db-db "
      
- job: Trends_Intel_Linux
  displayName: 2- Trends Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Intel_Linux, Trends_Intel_Windows, Trends_Database_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load2-load "
      
- job: Native_Aot_Arm_28_Linux
  displayName: 2- Native Aot Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Intel_Linux, Trends_Intel_Windows, Trends_Database_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: nativeaot-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-28-app --profile amd-lin-load --profile amd-lin2-db "
      
# GROUP 3

- job: Trends_Database_Amd_Linux
  displayName: 3- Trends Database Amd Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Intel_Windows, Trends_Intel_Linux, Native_Aot_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile amd-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: Trends_Arm_28_Linux
  displayName: 3- Trends Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Intel_Windows, Trends_Intel_Linux, Native_Aot_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile arm-lin-28-app --profile intel-load2-load "
      
# GROUP 4

- job: Trends_Amd_Linux
  displayName: 4- Trends Amd Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Amd_Linux, Trends_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile amd-lin-app --profile intel-load2-load "
      
- job: Containers_Intel_Linux
  displayName: 4- Containers Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Amd_Linux, Trends_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: containers-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: EF_Core_Intel_Windows
  displayName: 4- EF Core Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Amd_Linux, Trends_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: efcore-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile intel-win-app "
      
# GROUP 5

- job: Baselines_Database_Intel_Linux
  displayName: 5- Baselines Database Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Amd_Linux, Containers_Intel_Linux, EF_Core_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: baselines-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: Baselines_Intel_Windows
  displayName: 5- Baselines Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Amd_Linux, Containers_Intel_Linux, EF_Core_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: baselines-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load2-load "
      
- job: Baselines_Database_Arm_28_Linux
  displayName: 5- Baselines Database Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Amd_Linux, Containers_Intel_Linux, EF_Core_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: baselines-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-28-app --profile amd-lin-load --profile amd-lin2-db "
      
# GROUP 6

- job: Baselines_Database_Intel_Windows
  displayName: 6- Baselines Database Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Intel_Linux, Baselines_Intel_Windows, Baselines_Database_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load-load --profile intel-db-db "
      
- job: Baselines_Intel_Linux
  displayName: 6- Baselines Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Intel_Linux, Baselines_Intel_Windows, Baselines_Database_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load2-load "
      
# GROUP 7

- job: Baselines_Database_Amd_Linux
  displayName: 7- Baselines Database Amd Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Intel_Windows, Baselines_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile amd-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: Baselines_Arm_28_Linux
  displayName: 7- Baselines Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Intel_Windows, Baselines_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile arm-lin-28-app --profile intel-load2-load "
      
- job: Native_Aot_Intel_Windows
  displayName: 7- Native Aot Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Intel_Windows, Baselines_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: nativeaot-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-lin-load --profile amd-lin2-db "
      
# GROUP 8

- job: Baselines_Amd_Linux
  displayName: 8- Baselines Amd Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Amd_Linux, Baselines_Arm_28_Linux, Native_Aot_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: baselines-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile amd-lin-app --profile intel-lin-load "
      
- job: Frameworks_Intel_Linux
  displayName: 8- Frameworks Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Amd_Linux, Baselines_Arm_28_Linux, Native_Aot_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: frameworks-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile amd-lin2-db "
      
- job: Grpc_Intel_Windows
  displayName: 8- Grpc Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Amd_Linux, Baselines_Arm_28_Linux, Native_Aot_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: grpc-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-db-load "
      
# GROUP 9

- job: Frameworks_Database_Intel_Linux
  displayName: 9- Frameworks Database Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Amd_Linux, Frameworks_Intel_Linux, Grpc_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: frameworks-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: WebSockets_Intel_Windows
  displayName: 9- WebSockets Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Amd_Linux, Frameworks_Intel_Linux, Grpc_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: websocket-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-load2-load "
      
- job: Frameworks_Database_Arm_28_Linux
  displayName: 9- Frameworks Database Arm 28 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Amd_Linux, Frameworks_Intel_Linux, Grpc_Intel_Windows]
  condition: succeededOrFailed()
  steps:
  - template: frameworks-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-28-app --profile amd-lin-load --profile amd-lin2-db "
      
# GROUP 10

- job: Frameworks_Database_Amd_Linux
  displayName: 10- Frameworks Database Amd Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Frameworks_Database_Intel_Linux, WebSockets_Intel_Windows, Frameworks_Database_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: frameworks-database-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile amd-lin-app --profile intel-load-load --profile intel-db-db "
      
- job: PGO_Intel_Windows
  displayName: 10- PGO Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Frameworks_Database_Intel_Linux, WebSockets_Intel_Windows, Frameworks_Database_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: pgo-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-win-app --profile intel-lin-load --profile intel-load2-db "
      
- job: Frameworks_Arm_80_Linux
  displayName: 10- Frameworks Arm 80 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Frameworks_Database_Intel_Linux, WebSockets_Intel_Windows, Frameworks_Database_Arm_28_Linux]
  condition: succeededOrFailed()
  steps:
  - template: frameworks-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 3
      arguments: "$(ciProfile) --profile arm-lin-app --profile amd-lin-load --profile amd-lin2-db "
      
# GROUP 11

- job: Frameworks_Amd_Linux
  displayName: 11- Frameworks Amd Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Frameworks_Database_Amd_Linux, PGO_Intel_Windows, Frameworks_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: frameworks-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 1
      arguments: "$(ciProfile) --profile amd-lin-app --profile intel-load2-load --profile amd-lin2-db "
      
- job: PGO_Intel_Linux
  displayName: 11- PGO Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Frameworks_Database_Amd_Linux, PGO_Intel_Windows, Frameworks_Arm_80_Linux]
  condition: succeededOrFailed()
  steps:
  - template: pgo-scenarios.yml
    parameters:
      connection: ASP.NET Benchmarks Queue 2
      arguments: "$(ciProfile) --profile intel-lin-app --profile intel-load-load --profile intel-db-db "
      

