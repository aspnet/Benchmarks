# Websocket scenarios

parameters:
- name: arguments
  type: string
  default: ''
- name: connection
  type: string
  default: ''
- name: condition
  type: string
  default: 'true'

# Scenarios
- name: scenarios 
  type: object
  default: 

  - displayName: Echo-10000
    arguments: --scenario websocket $(websocketJobs) --variable scenario=echo --variable size=10000--property scenario=echo
  - displayName: Echo-100
    arguments: --scenario websocket $(websocketJobs) --variable scenario=echo --variable size=100 --property scenario=echo
  - displayName: Echo-Compression-100
    arguments: --scenario websocket $(websocketJobs) --variable scenario=echo --variable size=100 --variable compress=true --property scenario=echo --application.buildArguments \"/p:UseCompression=true\"
  - displayName: Echo-Compression-10000
    arguments: --scenario websocket $(websocketJobs) --variable scenario=echo --variable size=10000 --variable compress=true --property scenario=echo --application.buildArguments \"/p:UseCompression=true\"

steps:
- ${{ each s in parameters.scenarios }}:
  - task: PublishToAzureServiceBus@1
    condition: succeededOrFailed()
    displayName: ${{ s.displayName }}
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      waitForCompletion: true
      messageBody: |
        {
          "timeout": "00:5:00",
          "condition": "(${{ parameters.condition }})",
          "name": "crank",
          "args": [ "${{ s.arguments }} --application.options.collectCounters true --load.options.collectCounters true ${{ parameters.arguments }} --load.framework net7.0 --application.framework net7.0 --session $(session) --command-line-property --table WebsocketBenchmarks --sql SQL_CONNECTION_STRING --chart --no-measurements --no-metadata " ]
        }
