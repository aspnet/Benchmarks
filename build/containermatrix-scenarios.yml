# Blazor scenarios

parameters:
- name: server # the url of the agent service, e.g. http://asp-perf-lin:5001
  type: string
  default: ''
- name: connection
  type: string
  default: ''
- name: profile
  type: string
  default: ''

# Sizes
- name: sizes
  type: object
  default:

    Mini:
      displayName: Mini
      cpu: 0.25
      memory: 40mb
    Small:
      displayName: Small
      cpu: 1
      memory: 100mb
    Medium:
      displayName: Medium
      cpu: 2
      memory: 250mb
    Large:
      displayName: Large
      cpu: 4
      memory: 500mb
    QuarterMachine:
      displayName: QuarterMachine
      cpu: 7
      memory: 8gb
    HalfMachine:
      displayName: HalfMachine
      cpu: 14
      memory: 16gb
    WholeMachine:
      displayName: WholeMachine
      cpu: 28
      memory: 32gb

# Rates
- name: rates
  type: number
  default: 

    - 10
    - 100
    - 1000
    - 10000


# Scenarios
- name: scenarios 
  type: object
  default: 

  - displayName: Plaintext Middleware Docker
    arguments: --scenario plaintext $(containerMatrixJobs)
  - displayName: Json Middleware Docker
    arguments: --scenario json $(containerMatrixJobs)
  - displayName: Fortunes Raw Middleware Docker
    arguments: --scenario db-fortunes $(containerMatrixJobs)

steps:
- ${{ each s in parameters.scenarios }}:
  - ${{ each size in parameters.sizes }}:
    - ${{ each rate in parameters.rates }}:
      - task: PublishToAzureServiceBus@1
        condition: succeededOrFailed()
        displayName: ${{ s.displayName size.displayName rate RPS }}
        inputs:
          connectedServiceName: ${{ parameters.connection }}
          waitForCompletion: true
          messageBody: |
            {
              "name": "crank",
              "args": [ "--session $(session) ${{ s.arguments }} --profile ${{ parameters.profile }} --property "cpu=${{ size.cpu }}" --property "mem=${{ size.mem }}" --property "rate=${{ rate }}" --property "duration=30" --variable cpu=${{ size.cpu }} --variable mem=${{ size.mem }} --variable rate=${{ rate }} --variable duration=${{ duration }} --table ContainerMatrix --sql SQL_CONNECTION_STRING --chart" ]
            }