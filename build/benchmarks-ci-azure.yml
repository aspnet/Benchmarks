# Do not change this file, it is generated using these steps:
# - The file benchmarks.matrix.yml defines how each job is run in parallel
# - Convert its content to json using https://jsonformatter.org/yaml-to-json
# - Use the template in benchmarks.template.liquid and the converted json using https://liquidjs.com/playground.html
# - Update this file with the result of the template generation

trigger: none
pr: none

schedules:
- cron: "0 9/12 * * *"
  always: true # always run the pipeline even if there have not been source code changes since the last successful scheduled run.
  branches:
    include:
    - main

variables:
  - template: job-variables.yml
  - name: session
    value: $(Build.BuildNumber)
  - name: buildId
    value: $(Build.BuildId)
  - name: buildNumber
    value: $(Build.BuildNumber)
  - name: am
    value: $[lt(format('{0:HH}', pipeline.startTime), 12)]
  - name: pm
    value: $[ge(format('{0:HH}', pipeline.startTime), 12)]

jobs:

# GROUP 1

- job: Trends_Database_Azure_Linux
  displayName: 1- Trends Database Azure Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azure
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azure-lin "
      
- job: Trends_Database_Azure_Arm64_Linux
  displayName: 1- Trends Database Azure Arm64 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azurearm64
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azurearm64-lin "
      
- job: Trends_Database_Cobalt_Cloud_Linux
  displayName: 1- Trends Database Cobalt Cloud Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: []
  condition: succeededOrFailed()
  steps:
  - template: trend-database-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: cobaltcloud
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile cobalt-cloud-lin "
      
# GROUP 2

- job: Trends_Azure_Linux
  displayName: 2- Trends Azure Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Azure_Linux, Trends_Database_Azure_Arm64_Linux, Trends_Database_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azure
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azure-lin "
      
- job: Trends_Azure_Arm64_Linux
  displayName: 2- Trends Azure Arm64 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Azure_Linux, Trends_Database_Azure_Arm64_Linux, Trends_Database_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azurearm64
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azurearm64-lin "
      
- job: Trends_Cobalt_Cloud_Linux
  displayName: 2- Trends Cobalt Cloud Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Database_Azure_Linux, Trends_Database_Azure_Arm64_Linux, Trends_Database_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: cobaltcloud
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile cobalt-cloud-lin "
      
# GROUP 3

- job: Baselines_Database_Azure_Linux
  displayName: 3- Baselines Database Azure Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Azure_Linux, Trends_Azure_Arm64_Linux, Trends_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-database-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azure
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azure-lin "
      
- job: Baselines_Database_Azure_Arm64_Linux
  displayName: 3- Baselines Database Azure Arm64 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Azure_Linux, Trends_Azure_Arm64_Linux, Trends_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-database-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azurearm64
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azurearm64-lin "
      
- job: Baselines_Database_Cobalt_Cloud_Linux
  displayName: 3- Baselines Database Cobalt Cloud Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Trends_Azure_Linux, Trends_Azure_Arm64_Linux, Trends_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-database-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: cobaltcloud
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile cobalt-cloud-lin "
      
# GROUP 4

- job: Baselines_Azure_Linux
  displayName: 4- Baselines Azure Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Azure_Linux, Baselines_Database_Azure_Arm64_Linux, Baselines_Database_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azure
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azure-lin "
      
- job: Baselines_Azure_Arm64_Linux
  displayName: 4- Baselines Azure Arm64 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Azure_Linux, Baselines_Database_Azure_Arm64_Linux, Baselines_Database_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azurearm64
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azurearm64-lin "
      
- job: Baselines_Cobalt_Cloud_Linux
  displayName: 4- Baselines Cobalt Cloud Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Database_Azure_Linux, Baselines_Database_Azure_Arm64_Linux, Baselines_Database_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: baselines-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: cobaltcloud
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile cobalt-cloud-lin "
      
# GROUP 5

- job: Containers_Azure_Intel_Linux
  displayName: 5- Containers Azure Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Azure_Linux, Baselines_Azure_Arm64_Linux, Baselines_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: containers-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azure
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azure-lin "
      
- job: Containers_Azure_Arm64_Linux
  displayName: 5- Containers Azure Arm64 Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Azure_Linux, Baselines_Azure_Arm64_Linux, Baselines_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: containers-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azurearm64
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile aspnet-azurearm64-lin "
      
- job: Containers_Cobalt_Cloud_Linux
  displayName: 5- Containers Cobalt Cloud Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Baselines_Azure_Linux, Baselines_Azure_Arm64_Linux, Baselines_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: containers-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: cobaltcloud
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile cobalt-cloud-lin "
      
# GROUP 6

- job: IDNA_Azure_Amd_Linux
  displayName: 6- IDNA Azure Amd Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [Containers_Azure_Intel_Linux, Containers_Azure_Arm64_Linux, Containers_Cobalt_Cloud_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azure
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile idna-amd-lin "
      
# GROUP 7

- job: IDNA_Azure_Intel_Linux
  displayName: 7- IDNA Azure Intel Linux
  pool: server
  timeoutInMinutes: 120
  dependsOn: [IDNA_Azure_Amd_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azure
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile idna-intel-lin "
      
# GROUP 8

- job: IDNA_Azure_Amd_Windows
  displayName: 8- IDNA Azure Amd Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [IDNA_Azure_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azure
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile idna-amd-win "
      
- job: IDNA_Azure_Intel_Windows
  displayName: 8- IDNA Azure Intel Windows
  pool: server
  timeoutInMinutes: 120
  dependsOn: [IDNA_Azure_Intel_Linux]
  condition: succeededOrFailed()
  steps:
  - template: trend-scenarios.yml
    parameters:
      connection: ASPNET Benchmarks Service Bus
      serviceBusQueueName: azurearm64
      serviceBusNamespace: aspnetbenchmarks
      arguments: "$(ciProfile) --profile idna-intel-win "
      

