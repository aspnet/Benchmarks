parameters:
- name: profile
  type: string
  default: ''
- name: warmup
  type: number
  default: 15
- name: duration
  type: number
  default: 15
- name: connection
  type: string
  default: ''

# Scenarios
- name: scenarios
  type: object
  default:

# Platform

  - displayName: Plaintext Platform
    arguments: --scenario plaintext $(platformJobs) --property scenario=PlaintextPlatform --property protocol=http
  - displayName: Json Platform
    arguments: --scenario json $(platformJobs) --property scenario=JsonPlatform --property protocol=http
  - displayName: Fortunes Platform
    arguments: --scenario fortunes $(platformJobs) --property scenario=FortunesPlatform --property protocol=http
  - displayName: Single Query Platform
    arguments: --scenario single_query $(platformJobs) --property scenario=SingleQueryPlatform --property protocol=http
  - displayName: Multiple Queries Platform
    arguments: --scenario multiple_queries $(platformJobs) --property scenario=MultipleQueriesPlatform --property protocol=http
  - displayName: Updates Platform
    arguments: --scenario updates $(platformJobs) --property scenario=UpdatesPlatform --property protocol=http
  - displayName: Caching Platform
    arguments: --scenario caching $(platformJobs) --property scenario=CachingPlatform --property protocol=http

# Plaintext

  - displayName: Plaintext
    arguments: --scenario plaintext $(plaintextJobsV2) --property scenario=Plaintext --property protocol=http
  - displayName: Plaintext Mvc
    arguments: --scenario mvc $(plaintextJobsV2) --property scenario=PlaintextMvc --property protocol=http
  - displayName: Plaintext Endpoint
    arguments: --scenario endpoint $(plaintextJobsV2) --property scenario=PlaintextEndpoint --property protocol=http
  - displayName: Plaintext Connection Close
    arguments: --scenario connectionclose $(plaintextJobsV2) --property scenario=ConnectionClose --property protocol=http

# Json

  - displayName: Json
    arguments: --scenario json $(jsonJobsV2) --property scenario=Json --property protocol=http
  - displayName: Json Https
    arguments: --scenario https $(jsonJobsV2) --property scenario=JsonHttps --property protocol=https
  - displayName: Json Mvc
    arguments: --scenario mvc $(jsonJobsV2) --property scenario=JsonMvc --property protocol=http

# Database

  - displayName: Fortunes
    arguments: --scenario fortunes $(databaseJobs) --property scenario=Fortunes --property protocol=http
  - displayName: Fortunes EF
    arguments: --scenario fortunes_ef $(databaseJobs) --property scenario=FortunesEf --property protocol=http

steps:
- ${{ each s in parameters.scenarios }}:
  - task: PublishToAzureServiceBus@1
    displayName: "${{ s.displayName }}"
    condition: succeededOrFailed()
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      waitForCompletion: true
      messageBody: |
        {
          "name": "benchmarksdriver2",
          "args": [ "${{ s.arguments }} --profile ${{ parameters.profile }} --application.channel edge --application.framework net5.0 --variable warmup=${{ parameters.warmup }} --variable duration=${{ parameters.duration }} --application.collectCounters true --no-metadata --no-measurements --session $(session) --description \"${{ s.displayName }} $(profile)\" --property buildId=\"$(buildId)\" --property buildNumber=\"$(buildNumber)\" --table TrendBenchmarks --sql SQL_CONNECTION_STRING" ]
        }
