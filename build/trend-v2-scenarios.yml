parameters:
- name: profile
  type: string
  default: ''
- name: warmup
  type: number
  default: 15
- name: duration
  type: number
  default: 15
- name: connection
  type: string
  default: ''

# Scenarios
- name: scenarios
  type: object
  default:

# Platform

  - displayName: Plaintext Platform
    arguments: --scenario plaintext $(platformJobs) --property scenario=PlaintextPlatform --property protocol=http
  - displayName: Json Platform
    arguments: --scenario json $(platformJobs) --property scenario=JsonPlatform --property protocol=http

# Plaintext

  - displayName: Plaintext
    arguments: --scenario plaintext $(plaintextJobsV2) --property scenario=Plaintext --property protocol=http
  - displayName: Plaintext Mvc
    arguments: --scenario mvc $(plaintextJobsV2) --property scenario=PlaintextMvc --property protocol=http
  - displayName: Plaintext Endpoint
    arguments: --scenario endpoint $(plaintextJobsV2) --property scenario=PlaintextEndpoint --property protocol=http
  - displayName: Plaintext Connection Close
    arguments: --scenario connectionclose $(plaintextJobsV2) --property scenario=ConnectionClose --property protocol=http --variable connections=32 --property connections=32 
  - displayName: Plaintext Connection Close Https
    arguments: --scenario connectionclosehttps $(plaintextJobsV2) --property scenario=ConnectionCloseHttps --property protocol=https --variable connections=32 --property connections=32

# Json

  - displayName: Json
    arguments: --scenario json $(jsonJobsV2) --property scenario=Json --property protocol=http
  - displayName: Json HttpSys
    arguments: --scenario json $(jsonJobsV2) --property scenario=Json --property protocol=http --property scenario=JsonHttpSys --variable server=HttpSys --application.options.requiredOperatingSystem windows
  - displayName: Json Https
    arguments: --scenario https $(jsonJobsV2) --property scenario=JsonHttps --property protocol=https
  # - displayName: Json Crossgen2
  #   arguments: --scenario json $(jsonJobsV2) --property scenario=JsonCrossgen2 --property protocol=http --application.buildArguments \"/p:PublishReadyToRun=true /p:PublishReadyToRunUseCrossgen2=true \"
  - displayName: Json Mvc
    arguments: --scenario mvc $(jsonJobsV2) --property scenario=JsonMvc --property protocol=http

# Mono

  - displayName: Plaintext Platform Mono
    arguments: --scenario plaintextPlatform-mono-jit $(monoJobs) --property scenario=PlaintextPlatformMono --property protocol=http
  - displayName: Json Platform Mono
    arguments: --scenario jsonPlatform-mono-jit $(monoJobs) --property scenario=JsonPlatformMono --property protocol=http
  - displayName: Plaintext Mono
    arguments: --scenario plaintext-mono-jit $(monoJobs) --property scenario=PlaintextMono --property protocol=http
  - displayName: Json Mono
    arguments: --scenario json-mono-jit $(monoJobs) --property scenario=JsonMono --property protocol=http

steps:
- ${{ each s in parameters.scenarios }}:
  - task: PublishToAzureServiceBus@1
    displayName: "${{ s.displayName }}"
    condition: succeededOrFailed()
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      waitForCompletion: true
      messageBody: |
        {
          "name": "crank",
          "args": [ "${{ s.arguments }} $(azureProfile) --profile ${{ parameters.profile }} --application.channel edge --application.framework net6.0 --variable warmup=${{ parameters.warmup }} --variable duration=${{ parameters.duration }} --application.options.collectCounters true --no-metadata --no-measurements --session $(session) --description \"${{ s.displayName }} ${{ parameters.profile }}\" --property buildId=\"$(buildId)\" --property buildNumber=\"$(buildNumber)\" --table TrendBenchmarks --sql SQL_CONNECTION_STRING --chart" ]
        }
