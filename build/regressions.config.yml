templates:
  rps: "A performance regression has been detected for the following scenarios: \n\n
      | Scenario | Environment | Date | Old RPS | New RPS | Change | Deviation | StDev | \n
      | -------- | ----------- | ---- | ------- | ------- | ------ | --------- | ----- | \n
      {% for regression in Regressions -%}
      {% assign r = regression.CurrentResult %}
      {% assign p = regression.PreviousResult %}
      {% assign rps = r.Data.jobs.load.results['wrk/rps/mean'] %}
      {% assign prevRps = p.Data.jobs.load.results['wrk/rps/mean'] %}
      {% assign change = regression.Change | divided_by: prevRps | times: 100 | round: 2 %}
      {% assign deviation = regression.Change | divided_by: regression.StandardDeviation | round: 2 %}
      | {{r.Scenario}} {% if regression.HasRecovered %}[Fixed]{% endif %} | {{r.Description}} | {{r.DateTimeUtc}} | {{prevRps | round: 0 }} | {{rps | round: 0 }} | {{change}} % ({{rps | minus: prevRps}}) | {{deviation}} Ïƒ | {{ regression.Change | round: 0 }} | \n
      {% endfor %}
      "
sources:
  - name: Trends 
    table: TrendBenchmarks
    rules:
      - include: .
      - include: Mvc
        labels: 
          - area-mvc
      - exclude: ulib
    daysToLoad: 14
    daysToAnalyze: 7
    regressions:
      probes: 
        - path: jobs.load.results['wrk/rps/mean']
        - path: jobs.load.results['bombardier/rps/mean']
      labels: 
        - Perf
        - perf-regression
      template: rps
    errors:
      probes: 
        - path: jobs.load.results['bombardier/badresponses']
        - path: jobs.load.results['wrk/errors/badresponses']
        - path: jobs.load.results['wrk/errors/socketerrors']
      labels: 
        - Perf
        - perf-bad-response
    notRunning:
      labels:
        - Perf
        - perf-not-running 
