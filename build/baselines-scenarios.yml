parameters:
- name: server
  type: string
  default: ''
- name: client
  type: string
  default: ''
- name: warmup
  type: number
  default: 15
- name: duration
  type: number
  default: 15

# Baselines
- name: baselines 
  type: object
  default: 
  
  - displayName: "2.1"
    arguments: --description Baseline21 --aspnetCoreVersion 2.1 --runtimeVersion 2.1
    supportsPlatform: false

  - displayName: "2.1 Servicing"
    arguments: --description Baseline21Servicing --aspnetCoreVersion 2.1.* --runtimeVersion 2.1.*
    supportsPlatform: false

  - displayName: "3.1"
  # RefPacks are broken for System.IO.Pipelining in 3.1.2, skip this version
    arguments: --description Baseline31 --aspnetCoreVersion 3.1.1 --runtimeVersion 3.1.1 --sdk 3.1.101
    supportsPlatform: true

  - displayName: "5.0.*"
  # Current dev, running close to other baselines, with same repeat parameters
    arguments: --description Baseline --runtimeversion 5.0.* --sdk 5.0.100-preview.4.20202.8
    supportsPlatform: true

# Scenarios
- name: scenarios 
  type: object
  default: 

  # Platform
  - displayName: Plaintext Platform
    arguments: --scenario PlaintextPlatform $(plaintextPlatformJobs)
    isPlatform: true
  - displayName: Json Platform
    arguments: --scenario JsonPlatform $(jsonPlatformJobs)
    isPlatform: true
  - displayName: Fortunes Platform
    arguments: --scenario FortunesPlatform $(htmlPlatformJobs) --database PostgreSql
    isPlatform: true

  # Plaintext
  - displayName: Plaintext
    arguments: --scenario Plaintext $(plaintextJobs)
    isPlatform: false
  - displayName: Plaintext Non-Pipelined
    arguments: --scenario PlaintextNonPipelined $(plaintextJobs)
    isPlatform: false
  - displayName: Plaintext Mvc
    arguments: --scenario MvcPlaintext $(plaintextJobs)
    isPlatform: false
  - displayName: Plaintext Endpoint
    arguments: --scenario EndpointPlaintext $(plaintextJobs)
    isPlatform: false
  
  # JSon
  - displayName: Json
    arguments: --scenario Json $(jsonJobs)
    isPlatform: false
  - displayName: Json Mvc
    arguments: --scenario MvcJson $(jsonJobs)
    isPlatform: false
  
  # Https
  - displayName: Plaintext Https
    arguments: --scenario Plaintext -m https $(plaintextJobs)
    isPlatform: false
  - displayName: Json Https
    arguments: --scenario Json -m https $(jsonJobs)
    isPlatform: false
  - displayName: Plaintext Non-Pipelined Https
    arguments: --scenario PlaintextNonPipelined -m https $(plaintextJobs)
    isPlatform: false
  
  # Database Fortunes
  - displayName: Database Fortunes Raw
    arguments: --scenario DbFortunesRaw $(htmlJobs) --database PostgreSql
    isPlatform: false
  - displayName: Database Fortunes EF
    arguments: --scenario DbFortunesEf $(htmlJobs) --database PostgreSql
    isPlatform: false

variables:
  session: "$[format('{0:yyyyMMddHHmm}', pipeline.startTime)]"
  defaultArgs: --server $(server) --client $(client) --self-contained --warmup $(warmup) --duration $(duration) --session $(session)
  sqlArgs: --table AspNetBaselines # --sql \"BENCHMARKS_CONNECTION_STRING\"

  plaintextJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Benchmarks/benchmarks.plaintext.json
  htmlJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Benchmarks/benchmarks.html.json
  jsonJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Benchmarks/benchmarks.json.json

  plaintextPlatformJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/BenchmarksApps/Kestrel/PlatformBenchmarks/benchmarks.plaintext.json
  jsonPlatformJobs: -j https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/BenchmarksApps/Kestrel/PlatformBenchmarks/benchmarks.json.json
  htmlPlatformJobs: -j  https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/BenchmarksApps/Kestrel/PlatformBenchmarks/benchmarks.html.json

# Agent-less jobs need this pool
pool: server

jobs:
- job: Trend
  steps:
  - ${{ each s in parameters.scenarios }}:
    - ${{ each b in parameters.baselines }}:
      - ${{ if or( eq(b.supportsPlatform, true), eq(s.isPlatform, false)) }}:
        - template: trend-citrine-template.yml
          parameters:
            displayName: "${{ s.displayName }} - ${{ b.displayName }}"
            arguments: "${{ s.arguments }} ${{ b.arguments }} $(defaultArgs) $(sqlArgs)"
