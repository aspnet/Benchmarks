# HttpClient scenarios

parameters:
- name: arguments
  type: string
  default: ''
- name: connection
  type: string
  default: ''
- name: condition
  type: string
  default: 'true'

- name: httpClientJobs
  type: string
  default: '--config https://raw.githubusercontent.com/aspnet/Benchmarks/main/scenarios/httpclient.benchmarks.yml?raw=true'

- name: tfm
  type: string
  default: '--client.framework net9.0 --server.framework net8.0' # net8.0 for server is a temporary workaround

- name: getScenarios 
  type: object
  default:
  - displayName: "GET"
    arguments: --scenario httpclient-kestrel-get --variable useHttpMessageInvoker=true --property server=kestrel --property client=dotnetinvoker --property method=get --client.options.collectCounters true

- name: httpVersion
  type: object
  default:
    - displayName: "HTTP/1.1"
      arguments: --variable httpVersion=1.1 --variable useHttps=true --property httpversion=h1

- name: clientsxThreads
  type: object
  default:
    - displayName: "Concurrency: 1x10"
      arguments: --variable numberOfHttpClients=1 --variable concurrencyPerHttpClient=10 --property clientsxthreads=1x10

- name: response
  type: object
  default:
    - displayName: "Response: 256 B"
      arguments: --variable responseSize=256 --property response=256b

steps:

# GET scenarios
- ${{ each s in parameters.getScenarios }}:
  - ${{ each version in parameters.httpVersion }}:
    - ${{ each ct in parameters.clientsxThreads }}:
      - ${{ each response in parameters.response }}:
        - task: PublishToAzureServiceBus@1
          condition: succeededOrFailed()
          timeoutInMinutes: 10
          displayName: ${{ version.displayName }} ${{ s.displayName }} ${{ response.displayName }} ${{ ct.displayName }}
          inputs:
            connectedServiceName: ${{ parameters.connection }}
            waitForCompletion: true
            useDataContractSerializer: "false"
            messageBody: |
              {
                "condition": "(true)",
                "name": "crank",
                "args": [ "--description \"${{ version.displayName }} ${{ s.displayName }} ${{ response.displayName }} ${{ ct.displayName }} $(System.JobDisplayName)\" ${{ parameters.tfm }} --command-line-property --table HttpClientBenchmarks --sql SQL_CONNECTION_STRING --cert-tenant-id SQL_SERVER_TENANTID --cert-client-id SQL_SERVER_CLIENTID --cert-path SQL_SERVER_CERT_PATH --cert-sni --chart --session $(session) ${{ parameters.arguments }} ${{ parameters.httpClientJobs }} --no-metadata --no-measurements ${{ s.arguments }} ${{ version.arguments }} ${{ ct.arguments }} ${{ response.arguments }}" ]
              }

