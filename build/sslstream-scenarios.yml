# Secure Transport (SslStream & QUIC) scenarios

parameters:
  - name: arguments
    type: string
    default: ""
  - name: connection
    type: string
    default: ""
  - name: condition
    type: string
    default: "true"

  - name: sslstreamTransport
    type: object
    default:
      - displayName: "SslStream"
        arguments: --config https://github.com/aspnet/Benchmarks/blob/main/scenarios/sslstream.benchmarks.yml?raw=true --property transport=SslStream

  - name: quicTransport
    type: object
    default:
      - displayName: "QUIC"
        arguments: --config https://github.com/aspnet/Benchmarks/blob/main/scenarios/quic.benchmarks.yml?raw=true --property transport=QUIC --property tlsVersion=1.3 --property tlsResume=no-resume

  - name: readWriteScenarios
    type: object
    default:
      - displayName: "Read-Write"
        arguments: --scenario read-write --property scenario=Read-Write
      - displayName: "RPS"
        arguments: --scenario rps --property scenario=RPS

  - name: handshakeScenarios
    type: object
    default:
      - displayName: "Handshake"
        arguments: --scenario handshake --property scenario=Handshake

  - name: tlsResume
    type: object
    default:
      - displayName: "TLS Resume"
        arguments: --variable allowTlsResume=true --property tlsResume=resume
      - displayName: "No TLS Resume"
        arguments: --variable allowTlsResume=false --property tlsResume=no-resume

  - name: tlsVersion
    type: object
    default:
      - displayName: "TLS 1.3"
        arguments: --variable tlsVersion=1.3 --property tlsVersion=1.3
      - displayName: "TLS 1.2"
        arguments: --variable tlsVersion=1.2 --property tlsVersion=1.2

  - name: connections
    type: object
    default:
      - displayName: "1 conn"
        arguments: --variable connections=1 --property connections=1
      - displayName: "16 conn"
        arguments: --variable connections=16 --property connections=16

  - name: singleStreamConnections
    type: object
    default:
      - displayName: "1 conn x 1 strm"
        arguments: --variable connections=1 --variable streams=1 --property connxstrm=1x1
      - displayName: "16 conn x 1 strm"
        arguments: --variable connections=16 --variable streams=1 --property connxstrm=16x1

  - name: multiplexedConnections
    type: object
    default:
      - displayName: "1 conn x 1 strm"
        arguments: --variable connections=1 --variable streams=1 --property connxstrm=1x1
      - displayName: "1 conn x 16 strm"
        arguments: --variable connections=1 --variable streams=16 --property connxstrm=1x16
      - displayName: "16 conn x 1 strm"
        arguments: --variable connections=16 --variable streams=1 --property connxstrm=16x1

  - name: sendBuffers
    type: object
    default:
      - displayName: "128 b send"
        arguments: --variable sendBufferSize=128 --property sendBufferSize=128b
      - displayName: "32 Kb send"
        arguments: --variable sendBufferSize=32768 --property sendBufferSize=32Kb

  - name: receiveBuffers
    type: object
    default:
      - displayName: "128 b recv"
        arguments: --variable receiveBufferSize=128 --property receiveBufferSize=128b
      - displayName: "32 Kb recv"
        arguments: --variable receiveBufferSize=32768 --property receiveBufferSize=32Kb

steps:
  # handshake scenarios -- SslStream
  - ${{ each t in parameters.sslstreamTransport }}:
      - ${{ each s in parameters.handshakeScenarios }}:
          - ${{ each version in parameters.tlsVersion }}:
              - ${{ each c in parameters.connections }}:
                  - ${{ each res in parameters.tlsResume }}:
                      - task: PublishToAzureServiceBus@1
                        condition: succeededOrFailed()
                        timeoutInMinutes: 10
                        displayName: ${{ t.displayName }} ${{ version.displayName }} ${{ s.displayName }} ${{ c.displayName }} ${{ res.displayName }}
                        inputs:
                          connectedServiceName: ${{ parameters.connection }}
                          waitForCompletion: true
                          useDataContractSerializer: "false"
                          messageBody: |
                            {
                              "condition": "(${{ parameters.condition }}) && (Math.round(Date.now() / 43200000) % 2 == 0 )",  
                              "name": "crank",
                              "args": [ "--client.framework net9.0 --server.framework net9.0 --client.options.collectCounters true --command-line-property --table SystemNet_TlsBenchmarks --sql SQL_CONNECTION_STRING --chart --session $(session) --description \"${{ t.displayName }} ${{ version.displayName }} ${{ s.displayName }} ${{ c.displayName }} ${{ res.displayName }} $(System.JobDisplayName)\" ${{ parameters.arguments }} --no-metadata --no-measurements ${{ t.arguments }} ${{ s.arguments }} ${{ version.arguments }} ${{ res.arguments }} ${{ c.arguments }}" ]
                            }

  # handshake scenarios -- QUIC
  - ${{ each t in parameters.quicTransport }}:
      - ${{ each s in parameters.handshakeScenarios }}:
          - ${{ each c in parameters.connections }}:
              - task: PublishToAzureServiceBus@1
                condition: succeededOrFailed()
                timeoutInMinutes: 10
                displayName: ${{ t.displayName }} ${{ s.displayName }} ${{ c.displayName }}
                inputs:
                  connectedServiceName: ${{ parameters.connection }}
                  waitForCompletion: true
                  useDataContractSerializer: "false"
                  messageBody: |
                    {
                      "condition": "(${{ parameters.condition }}) && (Math.round(Date.now() / 43200000) % 2 == 0 )",  
                      "name": "crank",
                      "args": [ "--client.framework net9.0 --server.framework net9.0 --client.options.collectCounters true --command-line-property --table SystemNet_TlsBenchmarks --sql SQL_CONNECTION_STRING --chart --session $(session) --description \"${{ t.displayName }} ${{ s.displayName }} ${{ c.displayName }} $(System.JobDisplayName)\" ${{ parameters.arguments }} --no-metadata --no-measurements ${{ t.arguments }} ${{ s.arguments }} ${{ c.arguments }}" ]
                    }

  # read-write scenarios -- SslStream
  - ${{ each t in parameters.sslstreamTransport }}:
      - ${{ each s in parameters.readWriteScenarios }}:
          - ${{ each sendbuf in parameters.sendBuffers }}:
              - ${{ each recvbuf in parameters.receiveBuffers }}:
                  - ${{ each version in parameters.tlsVersion }}:
                      - ${{ each c in parameters.singleStreamConnections }}:
                          - task: PublishToAzureServiceBus@1
                            condition: succeededOrFailed()
                            timeoutInMinutes: 10
                            displayName:  ${{ t.displayName }} ${{ version.displayName }} ${{ s.displayName }} ${{ sendbuf.displayName }} ${{ recvbuf.displayName }} ${{ c.displayName }}
                            inputs:
                              connectedServiceName: ${{ parameters.connection }}
                              waitForCompletion: true
                              useDataContractSerializer: "false"
                              messageBody: |
                                {
                                  "condition": "(${{ parameters.condition }}) && (Math.round(Date.now() / 43200000) % 2 == 0 )",  
                                  "name": "crank",
                                  "args": [ "--client.framework net9.0 --server.framework net9.0 --client.options.collectCounters true --command-line-property --table SystemNet_TlsBenchmarks --sql SQL_CONNECTION_STRING --chart --session $(session) --description \"${{ t.displayName }} ${{ version.displayName }} ${{ s.displayName }} ${{ sendbuf.displayName }} ${{ recvbuf.displayName }} ${{ c.displayName }} $(System.JobDisplayName)\" ${{ parameters.arguments }} --no-metadata --no-measurements ${{ t.arguments }} ${{ s.arguments }} ${{ version.arguments }} ${{ sendbuf.arguments }} ${{ recvbuf.arguments }} ${{ c.arguments }}" ]
                                }

  # read-write scenarios -- QUIC
  - ${{ each t in parameters.quicTransport }}:
      - ${{ each s in parameters.readWriteScenarios }}:
          - ${{ each sendbuf in parameters.sendBuffers }}:
              - ${{ each recvbuf in parameters.receiveBuffers }}:
                  - ${{ each c in parameters.multiplexedConnections }}:
                      - task: PublishToAzureServiceBus@1
                        condition: succeededOrFailed()
                        timeoutInMinutes: 10
                        displayName:  ${{ t.displayName }} ${{ s.displayName }} ${{ sendbuf.displayName }} ${{ recvbuf.displayName }} ${{ c.displayName }}
                        inputs:
                          connectedServiceName: ${{ parameters.connection }}
                          waitForCompletion: true
                          useDataContractSerializer: "false"
                          messageBody: |
                            {
                              "condition": "(${{ parameters.condition }}) && (Math.round(Date.now() / 43200000) % 2 == 0 )",  
                              "name": "crank",
                              "args": [ "--client.framework net9.0 --server.framework net9.0 --client.options.collectCounters true --command-line-property --table SystemNet_TlsBenchmarks --sql SQL_CONNECTION_STRING --chart --session $(session) --description \"${{ t.displayName }} ${{ s.displayName }} ${{ sendbuf.displayName }} ${{ recvbuf.displayName }} ${{ c.displayName }} $(System.JobDisplayName)\" ${{ parameters.arguments }} --no-metadata --no-measurements ${{ t.arguments }} ${{ s.arguments }} ${{ sendbuf.arguments }} ${{ recvbuf.arguments }} ${{ c.arguments }}" ]
                            }
