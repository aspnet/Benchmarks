# SslStream scenarios

parameters:
  - name: arguments
    type: string
    default: ""
  - name: connection
    type: string
    default: ""
  - name: condition
    type: string
    default: "true"

  - name: readWriteScenarios
    type: object
    default:
      - displayName: "read-write"
        arguments: --scenario read-write --property scenario=Read-Write --config https://github.com/aspnet/Benchmarks/blob/main/scenarios/sslstream.benchmarks.yml?raw=true

  - name: handshakeScenarios
    type: object
    default:
      - displayName: "handshake"
        arguments: --scenario handshake --property scenario=Handshake --config https://github.com/aspnet/Benchmarks/blob/main/scenarios/sslstream.benchmarks.yml?raw=true

  - name: tlsResume
    type: object
    default:
      - displayName: "TLS Resume"
        arguments: --variable allowTlsResume=true --property tlsResume=resume
      - displayName: "No TLS Resume"
        arguments: --variable allowTlsResume=false --property tlsResume=no-resume

  - name: tlsVersion
    type: object
    default:
      - displayName: "TLS 1.3"
        arguments: --variable tlsVersion=1.3 --property tlsVersion=1.3
      - displayName: "TLS 1.2"
        arguments: --variable tlsVersion=1.2 --property tlsVersion=1.2

  - name: connections
    type: object
    default:
      - displayName: "1 connection"
        arguments: --variable connections=1 --property connections=1 --property streams=1
      - displayName: "16 connections"
        arguments: --variable connections=16 --property connections=16 --property streams=1

steps:
  # handshake scenarios
  - ${{ each s in parameters.handshakeScenarios }}:
      - ${{ each version in parameters.tlsVersion }}:
          - ${{ each c in parameters.connections }}:
              - ${{ each res in parameters.tlsResume }}:
                  - task: PublishToAzureServiceBus@1
                    condition: succeededOrFailed()
                    timeoutInMinutes: 10
                    displayName: ${{ version.displayName }} ${{ s.displayName }} ${{ c.displayName }} ${{ res.displayName }}
                    inputs:
                      connectedServiceName: ${{ parameters.connection }}
                      waitForCompletion: true
                      useDataContractSerializer: "false"
                      messageBody: |
                        {
                          "condition": "(${{ parameters.condition }}) && (Math.round(Date.now() / 43200000) % 2 == 0 )",  
                          "name": "crank",
                          "args": [ "--client.framework net9.0 --server.framework net9.0 --client.options.collectCounters true --command-line-property --table SystemNet_TlsBenchmarks --sql SQL_CONNECTION_STRING --chart --session $(session) --description \"${{ version.displayName }} ${{ s.displayName }} ${{ c.displayName }} ${{ res.displayName }} $(System.JobDisplayName)\" ${{ parameters.arguments }} --no-metadata --no-measurements ${{ s.arguments }} ${{ version.arguments }} ${{ res.arguments }} ${{ c.arguments }}" ]
                        }

  # read-write scenarios
  - ${{ each s in parameters.readWriteScenarios }}:
      - ${{ each version in parameters.tlsVersion }}:
          - ${{ each c in parameters.connections }}:
              - task: PublishToAzureServiceBus@1
                condition: succeededOrFailed()
                timeoutInMinutes: 10
                displayName: ${{ version.displayName }} ${{ s.displayName }} ${{ c.displayName }}
                inputs:
                  connectedServiceName: ${{ parameters.connection }}
                  waitForCompletion: true
                  useDataContractSerializer: "false"
                  messageBody: |
                    {
                      "condition": "(${{ parameters.condition }}) && (Math.round(Date.now() / 43200000) % 2 == 0 )",  
                      "name": "crank",
                      "args": [ "--client.framework net9.0 --server.framework net9.0 --client.options.collectCounters true --command-line-property --table SystemNet_TlsBenchmarks --sql SQL_CONNECTION_STRING --chart --session $(session) --description \"${{ version.displayName }} ${{ s.displayName }} ${{ c.displayName }} $(System.JobDisplayName)\" ${{ parameters.arguments }} --no-metadata --no-measurements ${{ s.arguments }} ${{ version.arguments }} ${{ c.arguments }}" ]
                    }
