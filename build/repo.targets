<Project>

  <ItemGroup>
    <!-- Used by custom roslyn compiler -->
    <DotNetCoreRuntime Include="1.1.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Default ThreadCount (cores / 2) is optimal for current hardware -->
    <CloudScenarios Include="-n Plaintext" />
    <CloudScenarios Include="-n MvcPlaintext" />

    <CloudScenarios Include="-n Json" />
    <CloudScenarios Include="-n MvcJson" />

    <CloudScenarios Include="-n DbSingleQueryRaw" />
    <CloudScenarios Include="-n DbSingleQueryDapper" />
    <CloudScenarios Include="-n DbSingleQueryEf" />
    <CloudScenarios Include="-n MvcDbSingleQueryRaw" />
    <CloudScenarios Include="-n MvcDbSingleQueryDapper" />
    <CloudScenarios Include="-n MvcDbSingleQueryEf" />

    <CloudScenarios Include="-n DbMultiQueryRaw" />
    <CloudScenarios Include="-n DbMultiQueryDapper" />
    <CloudScenarios Include="-n DbMultiQueryEf" />
    <CloudScenarios Include="-n MvcDbMultiQueryRaw" />
    <CloudScenarios Include="-n MvcDbMultiQueryDapper" />
    <CloudScenarios Include="-n MvcDbMultiQueryEf" />

    <CloudScenarios Include="-n DbMultiUpdateRaw" />
    <CloudScenarios Include="-n DbMultiUpdateDapper" />
    <CloudScenarios Include="-n DbMultiUpdateEf" />
    <CloudScenarios Include="-n MvcDbMultiUpdateRaw" />
    <CloudScenarios Include="-n MvcDbMultiUpdateDapper" />
    <CloudScenarios Include="-n MvcDbMultiUpdateEf" />

    <CloudScenarios Include="-n DbFortunesRaw" />
    <CloudScenarios Include="-n DbFortunesDapper" />
    <CloudScenarios Include="-n DbFortunesEf" />
    <CloudScenarios Include="-n MvcDbFortunesRaw" />
    <CloudScenarios Include="-n MvcDbFortunesDapper" />
    <CloudScenarios Include="-n MvcDbFortunesEf" />
  </ItemGroup>

  <ItemGroup>
    <!-- Optimal ThreadCount for current hardware -->
    <PhysicalScenarios Include="-n Plaintext --kestrelThreadCount 2" />

    <PhysicalScenarios Include="-n Plaintext --kestrelTransport Sockets" />
    <PhysicalScenarios Include="-n Plaintext --webHost HttpSys" />
    <PhysicalScenarios Include="-n Plaintext -f Benchmarks.PassthroughConnectionFilter" />

    <PhysicalScenarios Include="-n Plaintext -m https" />
    <PhysicalScenarios Include="-n Plaintext -m https --kestrelTransport Sockets" />
    <PhysicalScenarios Include="-n Plaintext -m https --webHost HttpSys" />

    <!-- Default ThreadCount (cores / 2) is optimal for current hardware -->
    <PhysicalScenarios Include="-n Json" />

    <PhysicalScenarios Include="-n Json --kestrelTransport Sockets" />
    <PhysicalScenarios Include="-n Json --webHost HttpSys" />
    <PhysicalScenarios Include="-n Json -f Benchmarks.PassthroughConnectionFilter" />

    <PhysicalScenarios Include="-n Json -m https" />
    <PhysicalScenarios Include="-n Json -m https --kestrelTransport Sockets" />
    <PhysicalScenarios Include="-n Json -m https --webHost HttpSys" />

    <PhysicalScenarios Include="-n StaticFiles --path plaintext" />

    <PhysicalScenarios Include="-n MvcPlaintext" />

    <PhysicalScenarios Include="-n MvcJson" />

    <PhysicalScenarios Include="-n MemoryCachePlaintext" />
    <PhysicalScenarios Include="-n MemoryCachePlaintextSetRemove" />

    <PhysicalScenarios Include="-n ResponseCachingPlaintextCached" />
    <PhysicalScenarios Include="-n ResponseCachingPlaintextCached --method DELETE" />
    <PhysicalScenarios Include="-n ResponseCachingPlaintextResponseNoCache" />
    <PhysicalScenarios Include="-n ResponseCachingPlaintextRequestNoCache" />
    <PhysicalScenarios Include="-n ResponseCachingPlaintextVaryByCached" />
  </ItemGroup>

  <PropertyGroup>
    <BenchmarksDependsOn Condition="'$(NoBuild)' != 'true'">Compile</BenchmarksDependsOn>
  </PropertyGroup>

  <Target Name="TestBenchmarks" DependsOnTargets="$(BenchmarksDependsOn)">
    <MSBuild Projects="$(RepositoryRoot)src\BenchmarksDriver\BenchmarksDriver.csproj"
      Targets="GetTargetPath"
      Properties="Configuration=$(Configuration)">
      <Output TaskParameter="TargetOutputs" PropertyName="DriverOutputPath" />
    </MSBuild>

    <GetDotNetHost>
      <Output TaskParameter="ExecutablePath" PropertyName="DotNetPath" />
    </GetDotNetHost>

    <MSBuild Projects="$(MSBuildProjectFullPath)"
      Condition="'$(BENCHMARK_SERVER_CLOUD)' != '' AND '$(BENCHMARK_CLIENT_CLOUD)' != ''"
      Targets="RunBenchmark"
      Properties="Scenario=%(CloudScenarios.Identity);Server=$(BENCHMARK_SERVER_CLOUD);Client=$(BENCHMARK_CLIENT_CLOUD);DotNetPath=$(DotNetPath);DriverOutputPath=$(DriverOutputPath);NoBuild=true" />

    <MSBuild Projects="$(MSBuildProjectFullPath)"
      Condition="'$(BENCHMARK_SERVER_PHYSICAL)' != '' AND '$(BENCHMARK_CLIENT_PHYSICAL)' != ''"
      Targets="RunBenchmark"
      Properties="Scenario=%(PhysicalScenarios.Identity);Server=$(BENCHMARK_SERVER_PHYSICAL);Client=$(BENCHMARK_CLIENT_PHYSICAL);DotNetPath=$(DotNetPath);DriverOutputPath=$(DriverOutputPath);NoBuild=true" />
  </Target>

  <Target Name="RunBenchmark" DependsOnTargets="$(BenchmarksDependsOn)">
    <PropertyGroup>
      <DotNetPath Condition="'$(DotNetPath)' == ''">dotnet</DotNetPath>
      <RunArgs>$(DriverOutputPath) $(Scenario) -s $(Server) -c $(Client) </RunArgs>
      <RunArgs Condition="'$(BENCHMARK_SQL)' != ''">$(RunArgs) -q $(BENCHMARK_SQL)</RunArgs>
      <RunArgs Condition="'$(Quiet)' != 'true'">$(RunArgs) -v</RunArgs>
    </PropertyGroup>

    <Message Text="Running: $(RunArgs)" Importance="High" />
    <Exec Command="&quot;$(DotNetPath)&quot; $(RunArgs)" WorkingDirectory="$(RepositoryRoot)src\BenchmarksDriver\" />
  </Target>

  <Target Name="InstallDotNetBeforeNoOp" DependsOnTargets="InstallDotNet" BeforeTargets="noop" />
 </Project>
