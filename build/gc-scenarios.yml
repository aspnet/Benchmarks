parameters:
- name: arguments
  type: string
  default: ''
- name: connection
  type: string
  default: ''
- name: condition
  type: string
  default: 'true'

# Scenarios
- name: scenarios
  type: object
  default:

  # Server Runs.
  - displayName: 0gb Server
    arguments: '--scenario 0gb --application.environmentVariables DOTNET_gcServer=1 --application.environmentVariables \"DOTNET_GCHeapCount={{ cores | minus: 2 }}\" --property scenario=0gb'
    condition: 'true'

  - displayName: 2gb Server
    arguments: '--scenario 2gb --application.environmentVariables DOTNET_gcWorkstation=1 --application.environmentVariables \"DOTNET_GCHeapCount={{ cores | minus: 2 }}\" --property scenario=2gb'
    condition: 'true'

  - displayName: 2gb Pinning Server
    arguments: '--scenario 2gb --application.environmentVariables DOTNET_gcServer=1 --application.environmentVariables \"DOTNET_GCHeapCount={{ cores | minus: 2 }}\" --property scenario=2gb-pinning'
    condition: 'true'

  - displayName: 20gb Server
    arguments: '--scenario 20gb --application.environmentVariables DOTNET_gcServer=1 --application.environmentVariables \"DOTNET_GCHeapCount={{ cores | minus: 2 }}\" --property scenario=20gb'
    condition: 'true'

  # Workstation Runs.
  - displayName: 0gb Workstation
    arguments: '--scenario 0gb --application.environmentVariables DOTNET_gcServer=0 --property scenario=0gb --application.variables.tc 2'
    condition: 'true'

  - displayName: 2gb Workstation
    arguments: '--scenario 2gb --application.environmentVariables DOTNET_gcServer=0 --property scenario=2gb --application.variables.tc 2'
    condition: 'true'

  - displayName: 2gb Pinning Workstation
    arguments: '--scenario 2gb-pinning --application.environmentVariables DOTNET_gcServer=0 --property scenario=2gb-pinning --application.variables.tc 2'
    condition: 'true'

  - displayName: 20gb Workstation
    arguments: '--scenario 20gb --application.environmentVariables DOTNET_gcServer=0 --property scenario=20gb --application.variables.tc 2'
    condition: 'true'

steps:
- ${{ each s in parameters.scenarios }}:
  - task: PublishToAzureServiceBus@1
    displayName: "${{ s.displayName }}"
    condition: succeededOrFailed()
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      waitForCompletion: true
      useDataContractSerializer: "false"
      messageBody: |
        {
          "name": "crank",
          "condition": "(${{ parameters.condition }}) && (${{ s.condition }})",
          "args": [ "${{ s.arguments }} ${{ parameters.arguments }} --config https://raw.githubusercontent.com/dotnet/performance/main/src/benchmarks/gc/scenarios/CrankConfiguration.yaml --application.framework net8.0 --application.options.collectCounters true --no-metadata --no-measurements --session $(session) --description \"${{ s.displayName }} $(System.JobDisplayName)\" --property buildId=\"$(buildId)\" --property buildNumber=\"$(buildNumber)\" --command-line-property --table GcBenchmarks --sql SQL_CONNECTION_STRING --chart" ]
        }
