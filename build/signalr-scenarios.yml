# SignalR scenarios

parameters:
- name: server
  type: string
  default: ''
- name: client
  type: string
  default: ''
- name: warmup
  type: number
  default: 0
- name: duration
  type: number
  default: 15
- name: connection
  type: string
  default: ''

# Scenarios
- name: scenarios 
  type: object
  default: 

  # SignalR
  - displayName: SignalRBroadcast WebSockets Json
    arguments: --scenario broadcast --load.variable.transport WebSockets --load.variable.protocol json $(signalRJobs)
  - displayName: SignalRBroadcast WebSockets MessagePack
    arguments: --scenario broadcast --load.variable.transport WebSockets --load.variable.protocol messagepack $(signalRJobs)
  - displayName: SignalRBroadcast ServerSentEvents Json
    arguments: --scenario broadcast --load.variable.transport ServerSentEvents --load.variable.protocol json $(signalRJobs)
  - displayName: SignalRBroadcast LongPolling Json
    arguments: --scenario broadcast --load.variable.transport LongPolling --load.variable.protocol json $(signalRJobs)
  - displayName: SignalRBroadcast LongPolling MessagePack
    arguments: --scenario broadcast --load.variable.transport LongPolling --load.variable.protocol messagepack $(signalRJobs)
  - displayName: SignalREcho WebSockets Json
    arguments: --scenario echo --load.variable.transport WebSockets --load.variable.protocol json $(signalRJobs)
  - displayName: SignalREcho WebSockets MessagePack
    arguments: --scenario echo --load.variable.transport WebSockets --load.variable.protocol messagepack $(signalRJobs)
  - displayName: SignalREcho ServerSentEvents Json
    arguments: --scenario echo --load.variable.transport ServerSentEvents --load.variable.protocol json $(signalRJobs)
  - displayName: SignalREcho LongPolling Json
    arguments: --scenario echo --load.variable.transport LongPolling --load.variable.protocol json $(signalRJobs)
  - displayName: SignalREcho LongPolling MessagePack
    arguments: --scenario echo --load.variable.transport LongPolling --load.variable.protocol messagepack $(signalRJobs)
  - displayName: SignalREchoAll WebSockets Json
    arguments: --scenario echoAll --load.variable.transport WebSockets --load.variable.protocol json $(signalRJobs)
  - displayName: SignalREchoAll WebSockets MessagePack
    arguments: --scenario echoAll --load.variable.transport WebSockets --load.variable.protocol messagepack $(signalRJobs)
  - displayName: SignalREchoAll ServerSentEvents Json
    arguments: --scenario echoAll --load.variable.transport ServerSentEvents --load.variable.protocol json $(signalRJobs)
  - displayName: SignalREchoAll LongPolling Json
    arguments: --scenario echoAll --load.variable.transport LongPolling --load.variable.protocol json $(signalRJobs)
  - displayName: SignalREchoAll LongPolling MessagePack
    arguments: --scenario echoAll --load.variable.transport LongPolling --load.variable.protocol messagepack $(signalRJobs)

steps:
- ${{ each s in parameters.scenarios }}:
  - task: PublishToAzureServiceBus@1
    condition: succeededOrFailed()
    displayName: ${{ s.displayName }}
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      waitForCompletion: true
      messageBody: |
        {
          "name": "benchmarksdriver2",
          "args": [ "${{ s.arguments }} --application.endpoints ${{ parameters.server }} --load.endpoints ${{ parameters.client }} --runtimeversion 5.0.* --self-contained --warmup ${{ parameters.warmup }} --duration ${{ parameters.duration }} --collect-counters --description Trend/Latest --session $(session) --table SignalRBenchmarks --config https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/BenchmarksDriver2/benchmarks.signalr.yml" ]
        }
      #--sql SQL_CONNECTION_STRING
