# EF Core micro benchmarks

parameters:
- name: arguments
  type: string
  default: ''
- name: connection
  type: string
  default: ''
- name: serviceBusQueueName
  type: string
  default: ''
- name: serviceBusNamespace
  type: string
  default: ''
- name: condition
  type: string
  default: 'true'

# Scenarios
- name: scenarios 
  type: object
  default: 

# List of scenarios

    - displayName: AddDataVariations
      arguments: $(efcoreJobs) --scenario AddDataVariations
    - displayName: ChildVariations
      arguments: $(efcoreJobs) --scenario ChildVariations
    - displayName: Delete
      arguments: $(efcoreJobs) --scenario Delete
    - displayName: ExistingDataVariations
      arguments: $(efcoreJobs) --scenario ExistingDataVariations
    - displayName: Funcletization
      arguments: $(efcoreJobs) --scenario Funcletization
    - displayName: Initialization
      arguments: $(efcoreJobs) --scenario Initialization
    - displayName: Insert
      arguments: $(efcoreJobs) --scenario Insert
    - displayName: Mixed
      arguments: $(efcoreJobs) --scenario Mixed
    - displayName: ParentVariations
      arguments: $(efcoreJobs) --scenario ParentVariations
    - displayName: RawSqlQuery
      arguments: $(efcoreJobs) --scenario RawSqlQuery
    - displayName: SimpleQuery
      arguments: $(efcoreJobs) --scenario SimpleQuery
    - displayName: NavigationsQuery
      arguments: $(efcoreJobs) --scenario NavigationsQuery
    - displayName: QueryCompilation
      arguments: $(efcoreJobs) --scenario QueryCompilation
    - displayName: Update
      arguments: $(efcoreJobs) --scenario Update

steps:
- ${{ each s in parameters.scenarios }}:
  - task: PublishToAzureServiceBus@2
    condition: succeededOrFailed()
    timeoutInMinutes: 30
    displayName: ${{ s.displayName }}
    inputs:
      connectedServiceName: ${{ parameters.connection }}
      serviceBusQueueName: ${{ parameters.serviceBusQueueName }}
      serviceBusNamespace: ${{ parameters.serviceBusNamespace }}
      waitForCompletion: true
      useDataContractSerializer: "false"
      messageBody: |
        {
          "name": "crank",
          "condition": "(${{ parameters.condition }})",
          "args": [ "--command-line-property --table EfCoreCrank --sql SQL_CONNECTION_STRING --cert-tenant-id SQL_SERVER_TENANTID --cert-client-id SQL_SERVER_CLIENTID --cert-path SQL_SERVER_CERT_PATH --cert-sni --session $(session) ${{ parameters.arguments }} --no-metadata --no-measurements ${{ s.arguments }} --description \"${{ s.displayName }} $(System.JobDisplayName)\" --property buildId=\"$(buildId)\" --property buildNumber=\"$(buildNumber)\"" ],
          "timeout": "00:30:00"
        }
