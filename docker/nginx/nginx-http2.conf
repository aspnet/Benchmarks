# perf: define how many processes can be used ('auto' for one per core, doesn't work on docker)
worker_processes WORKER_PROCESSES;

events { 
    # perf: ensures that each worker accepts as many connections as possible
    multi_accept        on;
    worker_connections  1024; 
    use                 epoll;
}   

http {

    proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;

    upstream backend {
        server DOWNSTREAM_ADDRESS:DOWNSTREAM_PORT;
        keepalive 8192; # With HTTP/2, we may have ~'100 * coreCount' concurrent streams
    }
    
    server {
        listen 8080 http2 ssl;
        keepalive_requests 100000000;
        http2_max_requests 100000000;

        ssl_certificate /etc/ssl/certs/testCert.crt;
        ssl_certificate_key /etc/ssl/private/testCert.rsa;

        server_name _;

        access_log off;
        error_log stdout info;

        location / {
            proxy_pass DOWNSTREAM_SCHEME://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection ""; # Remove the Connection header if the client sends it, we don't want to close the upstream connection
        }
    }
}
