# see https://www.envoyproxy.io/docs/envoy/latest/configuration/overview/examples

admin:
  address:
    socket_address:
        address: 0.0.0.0
        port_value: 8001

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: downstream
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
              - certificate_chain: { filename: "etc/testCert.crt" }
                private_key: { filename: "etc/testCert.key" }
            alpn_protocols: ["h2"]

  clusters:
  - name: downstream
    connect_timeout: 1s
    type: static # don't resolve the domain name, expect and IP
    lb_policy: round_robin
    load_assignment:
      cluster_name: downstream
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: DOWNSTREAM_ADDRESS
                port_value: DOWNSTREAM_PORT
    http2_protocol_options: {}
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
#EOF
